{"version":3,"sources":["graphics/arrow.svg","graphics/moon.svg","graphics/fourzerofour.webp","Components/header.js","api/Date.js","api/getanime.js","Components/loading.js","Components/headMenu.js","api/usePlaceholderImage.js","api/useLocalState.js","Components/day.js","Components/multititle.js","Components/Skeleton/dayPlaceholder.js","Components/dayContainer.js","Components/ongoing.js","Components/container.js","Components/about.js","Components/news.js","Components/footer.js","Components/FourZeroFour.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","id","aria-label","to","alt","title","activeClassName","replace","month","months","getRandomMonth","date","rMonth","Math","ceil","random","getSeasonByMonth","cmonth","getCurrentMonth","Date","getMonth","getLastDayOfMonth","cyear","convertToLocale","getDate","locale","time","toLocaleString","convertToJapanTime","timeZone","getFirstWeekDayOfMonth","getDay","year","getCurrentYear","getFullYear","getRandomYear","rYear","API","process","animeAPI","titlelist","ongoing","animeJSON","animecontroller","AbortController","animeScissors","season","a","getSeason","getAnimelist","signal","fetch","then","res","status","abort","console","log","ok","error","response","json","resJSON","anime","animelist","el","push","map","mal_id","airing","airing_start","image","image_url","split","studio","producers","members","titleArray","getAnimeByMonth","sortAnime","sortBy","undefined","sort","b","broadcast","reverse","newlist","length","fillNewList","firstDayOfMonth","getTime","lastDayOfMonth","forEach","index","currentDate","day","fill","name","multi","testAnimeScissors","testGetSeason","testGetAnimelist","data","title_jp","title_japanese","aired","from","images","webp","studios","testGetAnimeByMonth","testFillNewList","prop","ongoingScissor","getOngoing","ongoingToOngoinglist","templist","hhh","key","assert","i","e","getOngoingList","newOngoing","Mondays","Tuesdays","Wednesdays","Thursdays","Fridays","Saturdays","Sundays","Unknown","Loading","props","useEffect","document","body","classList","add","remove","code","HeadMenu","React","memo","history","useHistory","location","useLocation","isOngoing","pathname","withParams","tabIndex","onClick","changeDate","style","transform","src","arrow","monthClick","yearClick","bind","exact","strict","usePlaceholderImage","useState","sourceLoaded","setSourceLoaded","img","Image","onload","useLocalState","defaultValue","stickyValue","window","localStorage","getItem","JSON","parse","value","setValue","setItem","stringify","Day","ani","multistate","imageURL","loaded","styledDay","background","shouldMulti","open","rel","itemType","itemScope","parseInt","today","dateTime","shouldID","toString","padStart","stopPropagation","changeMV","Multititle","titles","DayPlaceholder","DayContainer","multiState","setMultiState","isMulti","useRef","pMonth","filler","multititle","current","changeState","forceState","MV","Fragment","Ongoing","setTitles","isLoading","setLoadingState","isError","setErrorState","isRendered","toggleLoadState","xd","shouldLoad","memOngoingList","useMemo","Container","useParams","navYear","navMonth","setDate","fillerWeek","setFillerWeek","pastDate","currentMonth","currentYear","charAt","toUpperCase","slice","setFirstDay","tempFillerWeek","firstWeekDay","AnimeAPI","shouldUpdate","nMonth","nYear","direction","findIndex","Weekdays","path","About","setStatus","serverStatus","role","News","Footer","toggledTheme","toggleTheme","documentElement","height","width","moon","href","target","FourZeroFour","header","querySelector","randomlink","Logo","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3fe86e17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.2c511b88.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.d58b953a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fourzerofour.29291068.webp\";","import React from \"react\";\nimport \"./Styling/header.css\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header className=\"Header\">\n      <div id=\"HeaderContainer\">\n        <Link\n          aria-label=\"Site logo / homepage button\"\n          className=\"Logo\"\n          to=\"/malendar/\"\n          alt=\"To homepage\"\n          title=\"Homepage (SPA mode)\"\n        >\n          <div className=\"Header__Logo--M\">M</div>C\n        </Link>\n        <nav className=\"Menu\">\n          <NavLink\n            aria-label=\"Link to update feed\"\n            className=\"Menu\"\n            to=\"/malendar/news\"\n            title=\"News\"\n            activeClassName=\"Header--active\"\n            replace\n          >\n            What's new\n          </NavLink>\n          <NavLink\n            aria-label=\"Link to about page\"\n            className=\"Menu\"\n            to=\"/malendar/about\"\n            title=\"About\"\n            activeClassName=\"Header--active\"\n          >\n            About\n          </NavLink>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","class Month {\n  months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  getRandomMonth = (date) => {\n    let rMonth = this.months[Math.ceil(Math.random() * 11)];\n\n    if (rMonth === date.month) {\n      rMonth = this.getRandomMonth(date);\n    }\n\n    return rMonth;\n  };\n\n  getSeasonByMonth = (cmonth) => {\n    let season = \"\";\n    if (cmonth === \"January\" || cmonth === \"February\" || cmonth === \"March\") {\n      season = \"winter\";\n    } else if (cmonth === \"April\" || cmonth === \"May\" || cmonth === \"June\") {\n      season = \"spring\";\n    } else if (\n      cmonth === \"July\" ||\n      cmonth === \"August\" ||\n      cmonth === \"September\"\n    ) {\n      season = \"summer\";\n    } else season = \"fall\";\n\n    return season;\n  };\n\n  getCurrentMonth = () => {\n    return this.months[new Date().getMonth()];\n  };\n\n  getLastDayOfMonth = (cmonth, cyear) => {\n    let gldm = new Date(\n      cyear,\n      this.convertToLocale(\n        \"en-US\",\n        new Date(`${cmonth} 01 ${cyear}`)\n      ).getMonth() + 1,\n      0\n    ).getDate();\n    return gldm;\n  };\n\n  convertToLocale = (locale, time) => {\n    return new Date(new Date(time).toLocaleString(locale));\n  };\n\n  convertToJapanTime = (time) => {\n    return new Date(time).toLocaleString(\"en-US\", { timeZone: \"Japan\" });\n  };\n\n  getFirstWeekDayOfMonth = (cmonth, cyear) => {\n    let tempDate = new Date(\n      this.convertToLocale(\"en-US\", `${cmonth} 01 ${cyear}`)\n    );\n    return tempDate.getDay();\n  };\n}\n\nclass Year {\n  getCurrentYear = () => {\n    return new Date().getFullYear();\n  };\n\n  getRandomYear = (date) => {\n    let rYear = Math.ceil(Math.random() * 15) + 2000;\n\n    if (rYear === date.year) {\n      rYear = this.getRandomYear(date);\n    }\n\n    return rYear;\n  };\n}\n\nexport const month = new Month();\nexport const year = new Year();\n","import { month } from \"./Date\";\n\nconst API = process.env.REACT_APP_API;\nconst PROXY = \"\";\n\n/*const sleep = (milliseconds) => {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n};*/\n\nclass AnimeAPI {\n  titlelist = [];\n  ongoing = [];\n  animeJSON = [];\n  animecontroller = new AbortController();\n\n  animeScissors = async (cyear, season, cmonth, shouldUpdate = true) => {\n    if (shouldUpdate) {\n      this.animeJSON = await this.getSeason(cyear, season);\n    }\n    return await this.getAnimelist(this.animeJSON, cmonth, cyear);\n  };\n\n  getSeason = async (cyear, season) => {\n    const signal = this.animecontroller.signal;\n\n    try {\n      const response = await fetch(\n        `${PROXY}${API}v3/season/${cyear}/${season}/`,\n        {\n          signal,\n        }\n      ).then((res) => {\n        if (res.status === 429) {\n          this.animecontroller.abort();\n          console.log(\"Too many requests!\");\n        }\n        if (!res.ok) {\n          this.animecontroller.abort();\n          console.error(\"Could not fetch!\");\n        }\n        return res;\n      });\n\n      const resJSON = await response.json();\n      return resJSON[\"anime\"];\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  };\n\n  getAnimelist = (anime, cmonth, cyear) => {\n    let animelist = [];\n    animelist.push(anime.map((el) => el));\n    animelist = animelist[0];\n\n    for (const el in animelist) {\n      animelist[el] = {\n        id: animelist[el].mal_id,\n        title: animelist[el].title,\n        airing: month.convertToJapanTime(animelist[el].airing_start),\n        image: animelist[el].image_url.split(\".jpg\")[0] + \".webp\",\n        studio: animelist[el].producers[0],\n        members: animelist[el].members,\n        titleArray: [],\n      };\n    }\n    this.titlelist = animelist;\n    this.getAnimeByMonth(cmonth, cyear);\n\n    //console.log(\"getAnimelist is \", titlelist);\n    return true;\n  };\n\n  sortAnime = (sortBy, animelist) => {\n    //console.log('sort has started!', titlelist);\n    if (sortBy === undefined) sortBy = 3;\n    if (animelist === undefined) animelist = [...this.titlelist];\n\n    if (sortBy === 0) {\n      animelist.sort((a, b) => {\n        if (a.title > b.title) {\n          return 1;\n        } else if (a.title < b.title) {\n          return -1;\n        } else return 0;\n      });\n    } else if (sortBy === 1) {\n      animelist.sort((a, b) => {\n        if (a.members > b.members) {\n          return 1;\n        } else if (a.members < b.members) {\n          return -1;\n        } else return 0;\n      });\n    } else if (sortBy === 2) {\n      animelist.sort((a, b) => {\n        if (a.broadcast === null) a.broadcast.time = \"00:00\";\n        if (b.broadcast === null) b.broadcast.time = \"00:00\";\n        if (a.broadcast.time > b.broadcast.time) {\n          return 1;\n        } else if (a.broadcast.time < b.broadcast.time) {\n          return -1;\n        } else return 0;\n      });\n    } else {\n      animelist.sort((a, b) => {\n        if (a.airing > b.airing) {\n          return 1;\n        } else if (a.airing < b.airing) {\n          return -1;\n        } else return 0;\n      });\n    }\n\n    this.titlelist = [...animelist];\n    //console.log(\"sort is finished!\", titlelist);\n  };\n\n  getAnimeByMonth = (cmonth, cyear) => {\n    //console.log(\"getAnimeByMonth: \", cmonth, cyear);\n    this.sortAnime(1);\n    let animelist = [...this.titlelist].reverse();\n    let newlist = [];\n    newlist.length = month.getLastDayOfMonth(cmonth, cyear);\n    newlist = this.fillNewList(newlist);\n\n    const firstDayOfMonth = new Date(`01 ${cmonth} ${cyear}`).getTime();\n    const lastDayOfMonth = new Date(\n      `${month.getLastDayOfMonth(cmonth, cyear)} ${cmonth} ${cyear}`\n    ).getTime();\n\n    //console.log(firstDayOfMonth, lastDayOfMonth);\n\n    animelist.forEach((a, index) => {\n      const currentDate = new Date(a.airing).getTime();\n\n      if (currentDate <= lastDayOfMonth && currentDate >= firstDayOfMonth) {\n        //console.log(firstDayOfMonth, currentDate, lastDayOfMonth);\n        //console.log(a, \"a.airing is true\");\n        a.day = new Date(a.airing).getDate();\n\n        if (newlist[a.day - 1].id) {\n          //console.log(\"temporal newlist is\", newlist);\n          newlist[a.day - 1][\"multi\"] = true;\n          newlist[a.day - 1].titleArray.push(a);\n        } else {\n          newlist[a.day - 1] = a;\n        }\n\n        return true;\n      }\n      return false;\n    });\n\n    //console.log(\"animelist after gabm is\", newlist);\n    this.titlelist = [...newlist];\n  };\n\n  fillNewList = (newlist) => {\n    let dumbTitle = {\n      id: \"\",\n      title: \"\",\n      airing: \"\",\n      image: \"\",\n      studio: { name: \"\" },\n      multi: false,\n      titleArray: [],\n    };\n\n    let animelist = [...newlist];\n    animelist.fill(dumbTitle, 0, animelist.length);\n    /*console.log(\n                          \"Filled list is \",\n                          animelist\n                        );*/\n    return animelist;\n  };\n\n  //test api below\n  testAnimeScissors = async (cyear, season, cmonth) => {\n    let animeJSON = await this.testGetSeason(cyear, season);\n    return await this.testGetAnimelist(animeJSON, cmonth, cyear);\n  };\n\n  testGetSeason = async (cyear, season) => {\n    console.log(\"season is\", season);\n    try {\n      const response = await fetch(\n        `${API}v4-alpha/seasons/${cyear}/${season}/`\n      ).then((res) => {\n        if (res.status === 429) {\n          console.log(\"Too many requests!\");\n        }\n        if (!res.ok) {\n          console.error(\"Could not fetch!\");\n        }\n        return res;\n      });\n      const resJSON = await response.json();\n      return resJSON.data;\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  };\n\n  testGetAnimelist = (anime, cmonth, cyear) => {\n    let animelist = [];\n    animelist.push(anime.map((el) => el));\n    animelist = animelist[0];\n\n    for (const el in animelist) {\n      animelist[el] = {\n        id: animelist[el].mal_id,\n        title: animelist[el].title,\n        title_jp: animelist[el].title_japanese,\n        aired: animelist[el].aired,\n        airing: month.convertToJapanTime(animelist[el].aired.from),\n        image: animelist[el].images.webp.image_url,\n        studio: animelist[el].studios[0],\n        members: animelist[el].members,\n        broadcast: animelist[el].broadcast,\n        titleArray: [],\n      };\n    }\n    this.titlelist = animelist;\n    this.testGetAnimeByMonth(cmonth, cyear);\n    //this.sortAnime(2, animelist);\n    //this.getOngoingList(animelist);\n\n    console.log(\"getAnimelist is \", animelist);\n    return true;\n  };\n\n  testGetAnimeByMonth = (cmonth, cyear) => {\n    this.sortAnime(1);\n    let animelist = [...this.titlelist].reverse();\n    let newlist = [];\n    newlist.length = month.getLastDayOfMonth(cmonth, cyear);\n    newlist = this.testFillNewList(newlist);\n\n    const firstDayOfMonth = new Date(`01 ${cmonth} ${cyear}`).getTime();\n    const lastDayOfMonth = new Date(\n      `${month.getLastDayOfMonth(cmonth, cyear)} ${cmonth} ${cyear}`\n    ).getTime();\n\n    animelist.forEach((a, index) => {\n      const currentDate = new Date(a.airing).getTime();\n\n      if (currentDate <= lastDayOfMonth && currentDate >= firstDayOfMonth) {\n        a.day = a.aired.prop.from.day;\n\n        if (newlist[a.day - 1].id) {\n          newlist[a.day - 1][\"multi\"] = true;\n          newlist[a.day - 1].titleArray.push(a);\n        } else {\n          newlist[a.day - 1] = a;\n        }\n\n        return true;\n      }\n      return false;\n    });\n    this.titlelist = [...newlist];\n  };\n\n  testFillNewList = (newlist) => {\n    let dumbTitle = {\n      id: \"\",\n      title: \"\",\n      airing: \"\",\n      image: \"\",\n      studio: { name: \"\" },\n      multi: false,\n      titleArray: [],\n      day: 0,\n    };\n\n    let animelist = [...newlist];\n    animelist.fill(dumbTitle, 0, animelist.length);\n    /*console.log(\n                          \"Filled list is \",\n                          animelist\n                        );*/\n    return animelist;\n  };\n\n  ongoingScissor = async () => {\n    let ongoing = await this.getOngoing();\n    this.ongoing = ongoing;\n    this.ongoingToOngoinglist(ongoing);\n    return true;\n  };\n\n  getOngoing = async () => {\n    try {\n      const response = await fetch(`${API}v4-alpha/schedules`).then((res) => {\n        if (res.status === 429) {\n          console.log(\"Too many requests!\");\n        }\n        if (!res.ok) {\n          console.error(\"Could not fetch!\");\n        }\n        return res;\n      });\n      const resJSON = await response.json();\n      return resJSON.data;\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  };\n\n  ongoingToOngoinglist = (animelist) => {\n    let templist = animelist;\n    let hhh = [];\n    console.assert(\n      templist === animelist,\n      \"oTo: templist is not equal with animelist\"\n    );\n\n    for (const key in templist) {\n      hhh[key] = [];\n      if (key === \"unknown\" || key === \"other\") continue;\n      for (let i in templist[key]) {\n        try {\n          hhh[key][i] = {\n            id: templist[key][i].mal_id,\n            title: templist[key][i].title,\n            title_jp: templist[key][i].title_japanese,\n            aired: templist[key][i].aired,\n            airing: month.convertToJapanTime(templist[key][i].aired.from),\n            image: templist[key][i].images.webp.image_url,\n            studio: templist[key][i].studios[0],\n            members: templist[key][i].members,\n            broadcast: templist[key][i].broadcast,\n            titleArray: [],\n            //day: templist[key][i].aired.prop.from.day,\n          };\n        } catch (e) {\n          console.error(e);\n        }\n      }\n      this.sortAnime(2, hhh[key]);\n    }\n\n    this.ongoing = hhh;\n  };\n\n  getOngoingList = (animelist) => {\n    console.log(\"gOL al:\", animelist);\n    let templist = [...animelist];\n    let newOngoing = {\n      Mondays: [],\n      Tuesdays: [],\n      Wednesdays: [],\n      Thursdays: [],\n      Fridays: [],\n      Saturdays: [],\n      Sundays: [],\n      Unknown: [],\n    };\n\n    /* Ongoing = [Mondays[]...Sundays[]]\n     * Mondays = [0{},1{},2{},3{}]\n     * ...\n     * Sundays = [0{},1{},2{},3{}]\n     * */\n\n    for (const el in templist) {\n      if (templist[el].broadcast) {\n        newOngoing[templist[el].broadcast.day].push(templist[el]);\n      } else {\n        newOngoing[\"Unknown\"].push(templist[el]);\n      }\n    }\n    console.log(\"getOngoingList\", newOngoing);\n    this.ongoing = newOngoing;\n\n    return true;\n  };\n}\n\nconst animeAPI = new AnimeAPI();\n\nexport default animeAPI;\n","import React, { useEffect } from \"react\";\n\nconst Loading = (props) => {\n  useEffect(() => {\n    document.body.classList.add(\"--overflow\");\n    return function cleanup() {\n      document.body.classList.remove(\"--overflow\");\n    };\n  }, []);\n\n  return (\n    <div aria-label=\"loading...\" className=\"Loading\">\n      {props.error.error ? `Error has occurred(╥﹏╥)` : `(っ◔◡◔)っ 🍜`}\n      {props.error.code ? console.log(props.error.code) : null}\n    </div>\n  );\n};\n\nexport default Loading;\n","import arrow from \"../graphics/arrow.svg\";\nimport React from \"react\";\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\n\nconst HeadMenu = React.memo((props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const isOngoing = location.pathname === \"/malendar/ongoing\";\n\n  return (\n    <div aria-label=\"head navigation\" className=\"HeadContainer\">\n      <div className=\"HeadContainer__DateNav\">\n        {props.withParams ? (\n          <>\n            {!isOngoing ? (\n              <>\n                <button\n                  tabIndex=\"0\"\n                  className=\"HeadContainer__Button\"\n                  onClick={() =>\n                    history.push(`/malendar/${props.changeDate(-1, true)}`)\n                  }\n                  title=\"Previous month\"\n                >\n                  <img\n                    alt=\"back-arrow\"\n                    style={{ transform: `rotate(180deg)` }}\n                    src={arrow}\n                  />\n                </button>\n                <button\n                  tabIndex=\"0\"\n                  className=\"HeadContainer__Button\"\n                  onClick={() =>\n                    history.push(`/malendar/${props.changeDate(1, true)}`)\n                  }\n                  title=\"Next month\"\n                >\n                  <img alt=\"fur-arrow\" src={arrow} />\n                </button>\n              </>\n            ) : null}\n            <div\n              aria-label=\"select month\"\n              className=\"HeadContainer__DateNav_DateMonth\"\n              onClick={\n                !isOngoing\n                  ? () => history.push(`/malendar/${props.monthClick(true)}`)\n                  : null\n              }\n              title={!isOngoing ? \"Click for random month\" : \"\"}\n            >\n              {props.date.month}\n            </div>\n            <div\n              aria-label=\"select year\"\n              className=\"HeadContainer__DateNav_DateYear\"\n              onClick={\n                !isOngoing\n                  ? () => history.push(`/malendar/${props.yearClick(true)}`)\n                  : null\n              }\n              title={!isOngoing ? \"Click for random year\" : \"\"}\n            >\n              {props.date.year}\n            </div>\n          </>\n        ) : (\n          <>\n            {!isOngoing ? (\n              <>\n                <button\n                  tabIndex=\"0\"\n                  className=\"HeadContainer__Button\"\n                  onClick={props.changeDate.bind(this, -1)}\n                  title=\"Previous month\"\n                >\n                  <img\n                    alt=\"back-arrow\"\n                    style={{ transform: `rotate(180deg)` }}\n                    src={arrow}\n                  />\n                </button>\n\n                <button\n                  tabIndex=\"0\"\n                  className=\"HeadContainer__Button\"\n                  onClick={props.changeDate.bind(this, 1)}\n                  title=\"Next month\"\n                >\n                  <img alt=\"fur-arrow\" src={arrow} />\n                </button>\n              </>\n            ) : null}\n            <div\n              aria-label=\"select month\"\n              className=\"HeadContainer__DateNav_DateMonth\"\n              onClick={!isOngoing ? props.monthClick : null}\n              title={!isOngoing ? \"Click for random month\" : null}\n            >\n              {props.date.month}\n            </div>\n            <div\n              aria-label=\"select year\"\n              className=\"HeadContainer__DateNav_DateYear\"\n              onClick={!isOngoing ? props.yearClick : null}\n              title={!isOngoing ? \"Click for random year\" : null}\n            >\n              {props.date.year}\n            </div>\n          </>\n        )}\n      </div>\n      <div\n        aria-label=\"select if you want to see ongoing or new releases\"\n        className=\"HeadContainer__ReleaseNav\"\n      >\n        <NavLink\n          aria-label=\"Ongoing page (beta)\"\n          //onClick={handleClicked}\n          exact\n          className={\"HeadContainer__ReleaseNav--menu\"}\n          to=\"/malendar/ongoing\"\n          activeClassName=\"HeadContainer__ReleaseNav--active\"\n          title=\"Ongoing page (beta)\"\n        >\n          Ongoing\n        </NavLink>\n        <NavLink\n          strict\n          className={`HeadContainer__ReleaseNav--menu ${\n            location.pathname === \"/malendar/\"\n              ? \"HeadContainer__ReleaseNav--active\"\n              : \"\"\n          }`}\n          aria-label=\"New Releases\"\n          to={`/malendar/${props.date.year}${\"/\" + props.date.month}`}\n          activeClassName=\"HeadContainer__ReleaseNav--active\"\n          title=\"New Releases (pages mode)\"\n        >\n          New releases\n        </NavLink>\n      </div>\n    </div>\n  );\n});\n\nexport default HeadMenu;\n","import { useEffect, useState } from \"react\";\n\nconst usePlaceholderImage = (src) => {\n  const [sourceLoaded, setSourceLoaded] = useState(null);\n\n  useEffect(() => {\n    const img = new Image();\n    try {\n      img.src = src;\n      img.onload = () => setSourceLoaded(src);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [src]);\n\n  return sourceLoaded;\n};\n\nexport default usePlaceholderImage;\n","import React from \"react\";\n\nfunction useLocalState(defaultValue, key) {\n  const [value, setValue] = React.useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n  });\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n\nexport default useLocalState;\n","import React from \"react\";\nimport usePlaceholderImage from \"../api/usePlaceholderImage\";\nimport useLocalState from \"../api/useLocalState\";\n\nconst Day = React.memo((props) => {\n  const ani = props.ani;\n  const [month, year] = props.month;\n  const multistate = !!props.multistate;\n\n  const [imageURL] = useLocalState(ani.image, ani.id);\n\n  const handleClicked = () => {\n    if (ani.id) {\n      window.open(`https://myanimelist.net/anime/${ani.id}`, \"_blank\");\n    }\n  };\n\n  const multititleClicked = (e) => {\n    e.stopPropagation();\n    props.changeMV();\n  };\n\n  let loaded = usePlaceholderImage(ani.image.split(\".webp\")[0] + \"l.webp\");\n\n  let styledDay = {\n    background: `linear-gradient(180deg, rgba(0,0,0,0) 0%, #0E0E0E 105%), url(${\n      ani ? (loaded ? loaded : imageURL) : \"\"\n    }) center center / cover no-repeat`,\n  };\n\n  return (\n    <section\n      aria-label={\n        ani.id\n          ? `[${ani.id}] Anime is ${ani.title}, their airing date is ${ani.airing}`\n          : \"\"\n      }\n      className={`Days__Day ${\n        (!ani.day || typeof ani.day === typeof \" \") && props.shouldMulti\n          ? \"Days__Day--filledDay\"\n          : \"\"\n      } ${\n        props.id >\n        month.getLastDayOfMonth(year.getCurrentYear(), month.getCurrentMonth())\n          ? \"--hidden\"\n          : \"\"\n      }`}\n      style={ani.image ? styledDay : null}\n      onClick={handleClicked}\n      rel=\"nofollow noreferer\"\n      itemType=\"Anime\"\n      itemScope\n    >\n      <div className=\"Days__Day_Notificators\">\n        <time\n          className={`Days__Day_DayNum ${\n            parseInt(props.id) === props.today ? \"Days__Day_DayNum--mToday\" : \"\"\n          }`}\n          dateTime={ani.airing}\n          itemType=\"startDate\"\n        >\n          {ani.day && typeof ani.day !== typeof \" \" && !props.shouldID\n            ? ani.day.toString().padStart(2, \"0\")\n            : props.id}\n        </time>\n        {ani.multi && props.shouldMulti ? (\n          <div\n            itemType=\"alsoThisDay\"\n            className={`Days__Day_DayNum Days__Day_DayNum--MultititleNotification \n            ${\n              multistate\n                ? \"Days__Day_DayNum--MultititleNotification--active\"\n                : \"\"\n            }`}\n            onClick={multititleClicked}\n            title={`+ ${ani.titleArray.length} anime this day`}\n          >\n            {\"+\" + ani.titleArray.length}\n          </div>\n        ) : null}\n        {!props.shouldMulti ? (\n          <div\n            itemType=\"alsoThisDay\"\n            className=\"Days__Day_DayNum Days__Day_DayNum--MultititleNotification\"\n            title={`Time of broadcast is ${ani.broadcast.time}`}\n          >\n            {ani.broadcast.time}\n          </div>\n        ) : null}\n      </div>\n\n      <div className=\"Days__Day_CardTitle\">\n        <div className=\"Days__Day_CardTitle--DayTitle\" itemType=\"name\">\n          {ani\n            ? ani.title\n            : \"男子高校生で売れっ子ライトノベル作家をしているけれど、年下のクラスメイトで声優の女の子に首を絞められている! The Animation 2nd Season\"}\n        </div>\n        <div\n          className=\"Days__Day_CardTitle--DaySubtitle\"\n          itemType=\"productionCompany\"\n        >\n          {ani.studio ? ani.studio.name : \"Studio is currently unknown\"}\n        </div>\n      </div>\n    </section>\n  );\n});\n\nexport default Day;\n","import React from \"react\";\nimport Day from \"./day\";\nimport { month, year } from \"../api/Date\";\n\nconst Multititle = (props) => {\n  return (\n    <div className=\"MultiDay\">\n      <h1 className=\"MultiDay__Header\">\n        More for {new Date(props.date).getDate()}{\" \"}\n        {month.months[new Date(props.date).getMonth()] + \" \"}\n        {new Date(props.date).getFullYear()}\n      </h1>\n      <div className=\"MultiDay__Titles\">\n        {props.titles.map((el, i) => (\n          <div className=\"Days__DayContainer\" key={i}>\n            <Day\n              id={(i + 1).toString().padStart(2, \"0\")}\n              key={props.titles.id}\n              ani={props.titles[i]}\n              month={[month, year]}\n              today={props.today}\n              shouldMulti={true}\n              shouldID={true}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Multititle;\n","import React from \"react\";\n\nconst DayPlaceholder = (props) => {\n  return (\n    <div\n      className={`Days__Day Days__Day--filledDay`}\n      aria-label=\"There is no anime for this day\"\n    >\n      <div className=\"Days__Day_Notificators\">\n        <time\n          className={`Days__Day_DayNum Days__Day_DayNum--filledDay ${\n            parseInt(props.id) === props.today ? \"Days__Day_DayNum--mToday\" : \"\"\n          }`}\n        >\n          {props.id ? props.id : \"\"}\n        </time>\n      </div>\n\n      <div className=\"Days__Day_CardTitle\">\n        <div className=\"Days__Day_CardTitle--DayTitle\" itemType=\"name\">\n          {\" \"}\n        </div>\n        <div\n          className=\"Days__Day_CardTitle--DaySubtitle\"\n          itemType=\"productionCompany\"\n        >\n          {\"  \"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DayPlaceholder;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Day from \"./day\";\nimport { month, year } from \"../api/Date\";\nimport Multititle from \"./multititle\";\nimport DayPlaceholder from \"./Skeleton/dayPlaceholder\";\n\nconst DayContainer = React.memo((props) => {\n  const [multiState, setMultiState] = useState(false);\n  const isMulti = useRef(false);\n\n  const pMonth = props.month;\n  const { i, titles, filler } = props;\n  let multititle = null;\n  const today = new Date().getDate();\n\n  useEffect(\n    () => {\n      if (titles[i].multi && props.shouldMulti) {\n        isMulti.current = true;\n        if (isMulti.current) changeState(false);\n      }\n      return () => (isMulti.current = false);\n    },\n    //eslint-disable-next-line\n    [pMonth]\n  );\n\n  const changeState = (forceState = undefined) => {\n    if (forceState !== undefined) {\n      setMultiState(forceState);\n    } else setMultiState(!multiState);\n  };\n\n  if (titles[i].multi && props.shouldMulti) {\n    multititle = (\n      <Multititle\n        date={titles[i].airing}\n        titles={titles[i].titleArray}\n        MV={multiState}\n        key={titles[i].id + \"_\" + multiState.toString()}\n        today={today}\n      />\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <li\n        className={`Days__DayContainer ${\n          (!titles[i].day || typeof titles[i].day === typeof \" \") &&\n          props.shouldMulti\n            ? \"Days__Day--filledDay\"\n            : \"\"\n        }`}\n        key={\"Container__\" + i}\n      >\n        {titles[i].id ? (\n          <Day\n            id={filler ? \" \" : (i + 1).toString().padStart(2, \"0\")}\n            key={titles[i].id}\n            ani={titles[i]}\n            month={[month, year]}\n            today={today}\n            changeMV={changeState}\n            shouldMulti={props.shouldMulti}\n            shouldID={false}\n            multistate={multiState}\n          />\n        ) : (\n          <DayPlaceholder\n            id={filler ? \" \" : (i + 1).toString().padStart(2, \"0\")}\n            today={new Date().getDate()}\n          />\n        )}\n      </li>\n      {multiState ? multititle : \"\"}\n    </React.Fragment>\n  );\n});\n\nexport default DayContainer;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport DayContainer from \"./dayContainer\";\nimport animeAPI from \"../api/getanime\";\nimport Loading from \"./loading\";\n\nconst Ongoing = () => {\n  const [titles, setTitles] = useState({});\n  const [isLoading, setLoadingState] = useState(false);\n  const [isError, setErrorState] = useState({ error: false, code: \"\" });\n\n  useEffect(() => {\n    let isRendered = true;\n\n    async function xd() {\n      if (isRendered) {\n        try {\n          toggleLoadState(true);\n          await animeAPI.ongoingScissor();\n          await setTitles((titles) => (titles = animeAPI.ongoing));\n          toggleLoadState(false);\n        } catch (error) {\n          console.error(\"Ongoing: error:\", error);\n        }\n      }\n    }\n\n    xd();\n    console.log(\"Ongoing updated!\");\n    document.title = `malendar for current ongoings`;\n\n    return () => (isRendered = false);\n  }, []);\n\n  const toggleLoadState = (shouldLoad) => {\n    if (shouldLoad) {\n      setLoadingState(true);\n      setErrorState({ error: false, code: \"\" });\n    } else {\n      setLoadingState(false);\n    }\n  };\n\n  let memOngoingList = useMemo(() => {\n    let hhh = [];\n    for (const key in titles) {\n      hhh[key] = titles[key].map((el, i) => {\n        return (\n          <DayContainer\n            i={i}\n            titles={titles[key]}\n            key={\"DayContainer__\" + i}\n            filler={false}\n            month={\"July\"}\n            shouldMulti={false}\n          />\n        );\n      });\n    }\n    return hhh;\n  }, [titles]);\n\n  return (\n    <>\n      {isLoading || isError.error ? <Loading error={isError} /> : null}\n      <ul className=\"Ongoing_Day\">{memOngoingList[\"monday\"]}</ul>\n      <ul className=\"Ongoing_Day\">{memOngoingList[\"tuesday\"]}</ul>\n      <ul className=\"Ongoing_Day\">{memOngoingList[\"wednesday\"]}</ul>\n      <ul className=\"Ongoing_Day\">{memOngoingList[\"thursday\"]}</ul>\n      <ul className=\"Ongoing_Day\">{memOngoingList[\"friday\"]}</ul>\n      <ul className=\"Ongoing_Day\">{memOngoingList[\"saturday\"]}</ul>\n      <ul className=\"Ongoing_Day\">{memOngoingList[\"sunday\"]}</ul>\n    </>\n  );\n};\n\nexport default Ongoing;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useLocation, useParams } from \"react-router\";\nimport \"./Styling/container.css\";\nimport AnimeAPI from \"../api/getanime\";\nimport { month, year } from \"../api/Date\";\nimport Loading from \"./loading\";\nimport HeadMenu from \"./headMenu\";\nimport DayContainer from \"./dayContainer\";\nimport Ongoing from \"./ongoing\";\nimport DayPlaceholder from \"./Skeleton/dayPlaceholder\";\n\nconst Container = React.memo((props) => {\n  const location = useLocation();\n  const { navYear, navMonth } = useParams();\n  const [titles, setTitles] = useState([]);\n  const [date, setDate] = useState({\n    month: month.getCurrentMonth(),\n    year: 2020,\n  });\n  const [isLoading, setLoadingState] = useState(false);\n  const [isError, setErrorState] = useState({ error: false, code: \"\" });\n  const [fillerWeek, setFillerWeek] = useState([]);\n\n  const isRendered = useRef(false);\n  const pastDate = useRef({});\n\n  /*console.log(\n      \"Container: render \\n [\",\n      \"\\ntitles\",\n      titles,\n      \"\\ndate\",\n      date,\n      \"\\npastdate\",\n      pastDate.current,\n      \"\\nisRendered\",\n      isRendered,\n      \"\\nisLoading\",\n      isLoading,\n      \"\\nisError\",\n      isError,\n      \"\\nfillerWeek\",\n      fillerWeek,\n      \"\\nlocation\",\n      location,\n      \"\\nnav\",\n      navYear,\n      navMonth,\n      \"\\nprops\",\n      props,\n      \"]\"\n    );*/\n\n  useEffect(() => {\n    if (JSON.stringify(pastDate.current) !== JSON.stringify(date)) {\n      //console.log(\"tick\");\n      let currentMonth = \"\";\n      let currentYear = 0;\n\n      if (currentMonth !== month.getCurrentMonth())\n        currentMonth = month.getCurrentMonth();\n      if (currentYear !== year.getCurrentYear())\n        currentYear = year.getCurrentYear();\n\n      if (navYear && navYear >= 1917 && navYear <= 2022 && navMonth) {\n        currentMonth = navMonth.charAt(0).toUpperCase() + navMonth.slice(1);\n        currentYear = parseInt(navYear);\n      }\n\n      if (date.month !== currentMonth || date.year !== currentYear) {\n        setDate((date) => (date = { month: currentMonth, year: currentYear }));\n      }\n\n      console.log(\"Container updated!\");\n    } else if (location.pathname !== \"/malendar/ongoing/\") {\n      setDate(\n        (date) =>\n          (date = {\n            month: month.getCurrentMonth(),\n            year: year.getCurrentYear(),\n          })\n      );\n    }\n\n    //eslint-disable-next-line\n  }, [location.pathname]);\n\n  useEffect(() => {\n    isRendered.current = true;\n\n    function setFirstDay() {\n      let tempFillerWeek = [];\n      let firstWeekDay =\n        month.getFirstWeekDayOfMonth(date.month, date.year) - 1;\n      if (firstWeekDay < 0) firstWeekDay = 6;\n\n      tempFillerWeek.length = firstWeekDay;\n      tempFillerWeek = AnimeAPI.fillNewList(tempFillerWeek, {\n        day: \" \",\n      });\n      if (fillerWeek.length !== tempFillerWeek.length)\n        setFillerWeek((fillerWeek) => (fillerWeek = [...tempFillerWeek]));\n      return tempFillerWeek;\n    }\n\n    async function xd() {\n      toggleLoadState(true);\n      let shouldUpdate = true;\n      try {\n        if (JSON.stringify(pastDate.current) !== JSON.stringify(date)) {\n          if (\n            month.getSeasonByMonth(date.month) ===\n              month.getSeasonByMonth(pastDate.current.month) &&\n            date.year === pastDate.current.year\n          ) {\n            shouldUpdate = false;\n            console.assert(\n              month.getSeasonByMonth(date.month),\n              month.getSeasonByMonth(pastDate.current.month)\n            );\n          }\n\n          if (date.year > 1900 && date.year < 2025) {\n            //console.log(\"click\");\n            await AnimeAPI.animeScissors(\n              //await AnimeAPI.testAnimeScissors(\n              date.year,\n              month.getSeasonByMonth(date.month),\n              date.month,\n              shouldUpdate\n            );\n          }\n\n          await setTitles((titles) => (titles = [...AnimeAPI.titlelist]));\n          pastDate.current = date;\n        }\n\n        if (isRendered.current) setFirstDay();\n      } catch (error) {\n        setErrorState({ error: true, code: error });\n      }\n      if (location.pathname !== \"/malendar/ongoing\") {\n        document.title = `malendar for ${date.month} ${date.year}`;\n      }\n      toggleLoadState(false);\n    }\n\n    if (isRendered.current) xd();\n\n    return () => (isRendered.current = false);\n\n    //eslint-disable-next-line\n  }, [date]);\n\n  const toggleLoadState = (shouldLoad) => {\n    if (shouldLoad) {\n      setLoadingState(true);\n      setErrorState({ error: false, code: \"\" });\n    } else {\n      setLoadingState(false);\n    }\n  };\n\n  const monthClick = (withParams = false) => {\n    let nMonth = month.getRandomMonth(date);\n    setDate({ ...date, month: nMonth });\n    if (withParams) return date.year + \"/\" + nMonth;\n    console.log(\"Current season is\", month.getSeasonByMonth(date.month));\n  };\n\n  const yearClick = (withParams = false) => {\n    let nYear = year.getRandomYear(date);\n    setDate({ ...date, year: nYear });\n    if (withParams) return nYear + \"/\" + date.month;\n  };\n\n  const changeDate = (direction, withParams = false) => {\n    if (date.month === \"January\" && direction < 0) {\n      setDate({ month: \"December\", year: parseInt(date.year) - 1 });\n      if (withParams) return parseInt(date.year) - 1 + \"/December\";\n    } else if (date.month === \"December\" && direction > 0) {\n      setDate({ month: \"January\", year: parseInt(date.year) + 1 });\n      if (withParams) return parseInt(date.year) + 1 + \"/January\";\n    } else {\n      setDate({\n        ...date,\n        month:\n          month.months[\n            month.months.findIndex((e) => e === date.month) + direction\n          ],\n      });\n      if (withParams)\n        return (\n          parseInt(date.year) +\n          \"/\" +\n          month.months[\n            month.months.findIndex((e) => e === date.month) + direction\n          ]\n        );\n    }\n  };\n\n  return (\n    <main className=\"Container\">\n      <HeadMenu\n        monthClick={monthClick}\n        yearClick={yearClick}\n        date={date}\n        changeDate={changeDate}\n        withParams={!!(navYear && navMonth)}\n      />\n      {isLoading || isError.error ? <Loading error={isError} /> : null}\n      <ol\n        className={`Days ${\n          location.pathname === \"/malendar/ongoing\" ? \"ongoing\" : \"\"\n        }`}\n      >\n        <Weekdays />\n        <Switch>\n          <Route exact path=\"/malendar/ongoing\">\n            <Ongoing />\n          </Route>\n          <Route exact path=\"/malendar/:navYear/:navMonth\">\n            {fillerWeek.map((el, i) => (\n              <li\n                className={`Days__DayContainer Days__Day--filledDay`}\n                key={\"Container__\" + i}\n              >\n                <DayPlaceholder key={\"DayPlaceholder__\" + i} />\n              </li>\n            ))}\n            {titles.map((el, i) => (\n              <DayContainer\n                i={i}\n                titles={titles}\n                key={\"DayContainer__\" + i}\n                filler={false}\n                month={date.month}\n                shouldMulti={true}\n              />\n            ))}\n          </Route>\n          <Route exact path=\"/malendar/\">\n            {fillerWeek.map((el, i) => (\n              <li\n                className={`Days__DayContainer Days__Day--filledDay`}\n                key={\"Container__\" + i}\n              >\n                <DayPlaceholder key={\"DayPlaceholder__\" + i} />\n              </li>\n            ))}\n\n            {titles.map((el, i) => (\n              <DayContainer\n                i={i}\n                titles={titles}\n                key={\"DayContainer__\" + i}\n                filler={false}\n                month={date.month}\n                shouldMulti={true}\n              />\n            ))}\n          </Route>\n        </Switch>\n      </ol>\n    </main>\n  );\n});\n\nconst Weekdays = React.memo(() => (\n  <React.Fragment>\n    <li id=\"Monday\">M</li>\n    <li id=\"Tuesday\">T</li>\n    <li id=\"Wednesday\">W</li>\n    <li id=\"Thursday\">T</li>\n    <li id=\"Friday\">F</li>\n    <li id=\"Saturday\">S</li>\n    <li id=\"Sunday\">S</li>\n    <li id=\"Hiddenday_1\"></li>\n    <li id=\"Hiddenday_2\"></li>\n  </React.Fragment>\n));\n\nexport default Container;\n","import React, { useEffect, useState } from \"react\";\n\nconst About = () => {\n  const [status, setStatus] = useState(0);\n  useEffect(() => {\n    (async function getStatus() {\n      let serverStatus = await fetch(\n        process.env.REACT_APP_API + \"v3/anime/1\"\n      ).then((res) => {\n        return res.status.toString();\n      });\n      //status = status.json();\n      setStatus((status) => (status = serverStatus));\n    })();\n  }, []);\n\n  return (\n    <main className=\"About\">\n      <h1>\n        <span role=\"img\" aria-label=\"narutomaki is a symbol of malendar\">\n          🍥\n        </span>\n        malendar\n        <span role=\"img\" aria-label=\"narutomaki is a symbol of malendar\">\n          🍥\n        </span>\n      </h1>\n\n      <section>\n        <p>\n          Malendar is a web-application that allows you to see calendar for\n          upcoming (and past) anime releases!\n        </p>\n      </section>\n\n      <section>\n        Server status:{\" \"}\n        {status === \"200\" ? \"OK\" : \"There is some trouble with connection\"}\n      </section>\n      <section>Current version: 07.20.2020_03</section>\n    </main>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport \"./Styling/news.css\";\n\nconst News = () => {\n  return (\n    <div className=\"News\">\n      <h1>What's new?</h1>\n      <section>\n        <h2>07.20.2020 update</h2>\n        <ul>\n          <h3>Features: </h3>\n          <li>Images are now in webp formats</li>\n          <li>Ongoing page (beta)</li>\n          <li>Slightly different behaviour of weekdays</li>\n\n          <h3>Bugfixes: </h3>\n          <li>Today's date was fixed</li>\n          <li>Some visual bug fixes</li>\n          <h4>Minor updates: </h4>\n          <li>patch _02: Added background image animation for titles</li>\n          <li>patch _02: Fixed visual bugs with date menu size</li>\n          <li>\n            patch _02: Fixed visual bugs with incorrect behaviour on ongoing\n            page\n          </li>\n          <br />\n          <li>patch _03: Added background colorizing for active multititles</li>\n          <li>patch _03: Fixed visual bugs with buttons</li>\n          <li>\n            patch _03: Fixed visual bugs with missing highlighting of 'New\n            releases' tab\n          </li>\n          <li>patch _03: Fixed visual bugs with multititle notificator</li>\n          <li>patch _03: Fixed another visual bugs on ongoing page</li>\n          <li>patch _03: Fixed visual bugs for touch screen users</li>\n          <h3>In nearest future: </h3>\n          <li>Correct Ongoing page</li>\n          <li>About page</li>\n          <li>Light theme</li>\n        </ul>\n      </section>\n      <section>\n        <h2>07.17.2020 update</h2>\n        <ul>\n          <h3>Features: </h3>\n          <li>\n            <b>Slightly beautiful 404 page</b>\n          </li>\n          <li>\n            Navigation between /yy/mm/ pages should be more correct since now\n          </li>\n          <li>Random dates should work as intended</li>\n\n          <h3>Bugfixes: </h3>\n          <li>Fixed bug with invalid behaviour of multititles (Issue #1)</li>\n          <li>Fixed bug with missed days numbers</li>\n          <li>Some behaviour with loading/error screen was also fixed</li>\n          <h3>In nearest future: </h3>\n          <li>Ongoing page</li>\n          <li>About page</li>\n          <li>Light theme</li>\n        </ul>\n      </section>\n      <section>\n        <h2>07.15.2020 update</h2>\n        <ul>\n          <h3>Features: </h3>\n          <li>Implemented header navigation</li>\n          <li>Added weekdays and w-d marks</li>\n          <li>\n            You can open exact date using links: <br />\n            <small>\n              https://shrmnn.github.io/malendar/1999/January for example; <br />\n              <del>Doesn't work for random dates (yet)</del>\n            </small>\n          </li>\n          <h3>Bugfixes: </h3>\n          <li>Fixed bug with macOS bounce scroll background color</li>\n          <li>Fixed bug with incorrect number of days per month</li>\n          <h3>In nearest future: </h3>\n          <li>Ongoing page</li>\n          <li>About page</li>\n          <li>\n            <del>Slightly beautiful 404 page</del>\n          </li>\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default News;\n","import React, { useEffect } from \"react\";\nimport useLocalState from \"../api/useLocalState\";\nimport \"./Styling/footer.css\";\nimport moon from \"../graphics/moon.svg\";\n\nconst Footer = React.memo(() => {\n  const [toggledTheme, toggleTheme] = useLocalState(true, \"toggled\");\n\n  useEffect(() => {\n    if (toggledTheme) {\n      document.documentElement.classList.remove(\"blue\");\n    } else {\n      document.documentElement.classList.add(\"blue\");\n    }\n  }, [toggledTheme]);\n\n  const changeTheme = () => {\n    toggleTheme(!toggledTheme);\n  };\n\n  return (\n    <footer className=\"Footer\">\n      <div\n        aria-label=\"Author of site is Alex Shermann, made in 2020\"\n        className=\"Footer__Right\"\n      >\n        malendar [2020] Alex Shermann\n      </div>\n      <div className=\"Footer__Left\">\n        <p\n          aria-label=\"Site is recommended for 18+\"\n          className=\"marker\"\n          title=\"Site is recommended for 18+\"\n        >\n          18+\n        </p>\n        <img\n          alt=\"change theme\"\n          aria-label=\"change theme\"\n          height=\"32\"\n          width=\"32\"\n          src={moon}\n          onClick={changeTheme}\n          className={toggledTheme ? \"Footer__Left--toggled\" : \"\"}\n        />\n        <a\n          aria-label=\"Link to github\"\n          href=\"https://github.com/shrmnn/malendar\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"GitHub\"\n        >\n          <img\n            alt=\"github link\"\n            aria-label=\"github link\"\n            height=\"32\"\n            width=\"32\"\n            className=\"Footer__Left--github\"\n            src=\"https://unpkg.com/simple-icons@v3/icons/github.svg\"\n          />\n        </a>\n      </div>\n    </footer>\n  );\n});\n\nexport default Footer;\n","import React, { useEffect } from \"react\";\nimport { month, year } from \"../api/Date\";\nimport \"./Styling/FourZeroFour.css\";\nimport Logo from \"../graphics/fourzerofour.webp\";\n\nconst FourZeroFour = () => {\n  useEffect(() => {\n    document.title = \"404. You shall (not) find\";\n    const header = document.querySelector(\".Header\");\n\n    header.classList.add(\"--shadow\");\n    return function cleanup() {\n      header.classList.remove(\"--shadow\");\n    };\n  }, []);\n\n  const randomlink =\n    \"https://shrmnn.github.io/malendar/\" +\n    year.getRandomYear(2020) +\n    \"/\" +\n    month.getRandomMonth(\"January\");\n\n  return (\n    <div className=\"FourZeroFour\">\n      <div></div>\n      <h1>{\"fourzerofour      fourzerofouru\"}</h1>\n      <h2 title=\"Page not found\">\n        {\"おしえて おしえて よ\\t \\tページが見つかりません\"}\n      </h2>\n      <a\n        aria-label=\"Link to random page. Maybe it would be better than 404 page\"\n        title=\"What about random page?\"\n        href={randomlink}\n      >\n        <img alt=\"404 error\" src={Logo} />\n      </a>\n    </div>\n  );\n};\n\nexport default FourZeroFour;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Components/header\";\nimport Container from \"./Components/container\";\nimport About from \"./Components/about\";\nimport News from \"./Components/news\";\nimport Footer from \"./Components/footer\";\n\nimport \"./App.css\";\nimport FourZeroFour from \"./Components/FourZeroFour\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"Content\">\n          <Switch>\n            <Route exact path=\"/malendar/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/malendar/news\">\n              <News />\n            </Route>\n            <Route exact path=\"/malendar/ongoing\">\n              <Container />\n            </Route>\n            <Route exact path=\"/malendar/:navYear/:navMonth\">\n              <Container />\n            </Route>\n            <Route exact path=\"/malendar/\">\n              <Container />\n            </Route>\n            <Route>\n              <FourZeroFour />\n            </Route>\n          </Switch>\n          <Footer />\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}