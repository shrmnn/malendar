{"version":3,"sources":["graphics/arrow.svg","graphics/moon.svg","graphics/fourzerofour.webp","Components/header.js","api/Date.js","api/getanime.js","Components/loading.js","Components/headMenu.js","api/usePlaceholderImage.js","api/useLocalState.js","Components/day.js","Components/multititle.js","Components/Skeleton/dayPlaceholder.js","Components/dayContainer.js","Components/ongoing.js","Components/container.js","Components/about.js","Components/news.js","Components/footer.js","Components/FourZeroFour.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","id","aria-label","to","alt","title","activeClassName","replace","month","months","getRandomMonth","date","rMonth","Math","ceil","random","getSeasonByMonth","cmonth","getCurrentMonth","Date","getMonth","getLastDayOfMonth","cyear","convertToLocale","getDate","locale","time","toLocaleString","convertToJapanTime","timeZone","getFirstWeekDayOfMonth","getDay","year","getCurrentYear","getFullYear","getRandomYear","rYear","animeAPI","titlelist","animecontroller","AbortController","animeScissors","season","a","getSeason","animeJSON","getAnimelist","signal","fetch","process","then","res","status","console","log","ok","error","response","json","resJSON","anime","animelist","el","push","map","mal_id","airing","airing_start","image","image_url","studio","producers","members","titleArray","getAnimeByMonth","sortAnime","sortBy","undefined","sort","b","reverse","newlist","length","fillNewList","firstDayOfMonth","getTime","lastDayOfMonth","forEach","index","currentDate","day","fill","name","multi","Loading","props","useEffect","document","body","classList","add","remove","code","HeadMenu","React","memo","history","useHistory","withParams","tabIndex","onClick","changeDate","style","transform","src","arrow","monthClick","yearClick","bind","exact","strict","usePlaceholderImage","useState","sourceLoaded","setSourceLoaded","img","Image","onload","e","useLocalState","defaultValue","key","stickyValue","window","localStorage","getItem","JSON","parse","value","setValue","setItem","stringify","Day","ani","imageURL","loaded","split","styledDay","background","open","rel","itemType","itemScope","parseInt","today","dateTime","toString","padStart","stopPropagation","changeMV","Multititle","titles","i","DayPlaceholder","DayContainer","multiState","setMultiState","isMulti","useRef","pMonth","filler","multititle","current","changeState","forceState","MV","Fragment","Ongoing","Weekdays","Container","location","useLocation","useParams","navYear","navMonth","setTitles","setDate","isLoading","setLoadingState","isError","setErrorState","fillerWeek","setFillerWeek","isRendered","currentMonth","currentYear","charAt","toUpperCase","slice","setFirstDay","tempFillerWeek","firstWeekDay","AnimeAPI","toggleLoadState","xd","shouldLoad","nMonth","nYear","direction","findIndex","path","About","setStatus","serverStatus","role","News","Footer","toggledTheme","toggleTheme","documentElement","height","width","moon","href","target","FourZeroFour","header","querySelector","randomlink","Logo","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.29e28bfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.2c511b88.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.d58b953a.svg\";","module.exports = __webpack_public_path__ + \"static/media/fourzerofour.29291068.webp\";","import React from \"react\";\nimport \"./Styling/header.css\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header className=\"Header\">\n      <div id=\"HeaderContainer\">\n        <Link\n          aria-label=\"Site logo / homepage button\"\n          className=\"Logo\"\n          to=\"/malendar/\"\n          alt=\"To homepage\"\n          title=\"Homepage (SPA mode)\"\n        >\n          <div className=\"Header__Logo--M\">M</div>C\n        </Link>\n        <nav className=\"Menu\">\n          <NavLink\n            aria-label=\"Link to update feed\"\n            className=\"Menu\"\n            to=\"/malendar/news\"\n            title=\"News\"\n            activeClassName=\"Header--active\"\n            replace\n          >\n            What's new\n          </NavLink>\n          <NavLink\n            aria-label=\"Link to about page\"\n            className=\"Menu\"\n            to=\"/malendar/about\"\n            title=\"About\"\n            activeClassName=\"Header--active\"\n          >\n            About\n          </NavLink>\n        </nav>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","class Month {\n  months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  getRandomMonth = (date) => {\n    let rMonth = this.months[Math.ceil(Math.random() * 11)];\n\n    if (rMonth === date.month) {\n      rMonth = this.getRandomMonth(date);\n    }\n\n    return rMonth;\n  };\n\n  getSeasonByMonth = (cmonth) => {\n    let season = \"\";\n    if (cmonth === \"January\" || cmonth === \"February\" || cmonth === \"March\") {\n      season = \"winter\";\n    } else if (cmonth === \"April\" || cmonth === \"May\" || cmonth === \"June\") {\n      season = \"spring\";\n    } else if (\n        cmonth === \"July\" ||\n        cmonth === \"August\" ||\n        cmonth === \"September\"\n    ) {\n      season = \"summer\";\n    } else season = \"fall\";\n\n    return season;\n  };\n\n  getCurrentMonth = () => {\n    return this.months[new Date().getMonth()];\n  };\n\n  getLastDayOfMonth = (cmonth, cyear) => {\n    let gldm = new Date(\n        cyear,\n        this.convertToLocale(\n            \"en-US\",\n            new Date(`${cmonth} 01 ${cyear}`)\n        ).getMonth() + 1,\n        0\n    ).getDate();\n    return gldm;\n  };\n\n  convertToLocale = (locale, time) => {\n    return new Date(new Date(time).toLocaleString(locale));\n  };\n\n  convertToJapanTime = (time) => {\n    return new Date(time).toLocaleString(\"en-US\", {timeZone: \"Japan\"});\n  };\n\n  getFirstWeekDayOfMonth = (cmonth, cyear) => {\n    let tempDate = new Date(\n        this.convertToLocale(\"en-US\", `${cmonth} 01 ${cyear}`)\n    );\n    return tempDate.getDay();\n  };\n}\n\nclass Year {\n  getCurrentYear = () => {\n    return new Date().getFullYear();\n  };\n\n  getRandomYear = (date) => {\n    let rYear = Math.ceil(Math.random() * 15) + 2000;\n\n    if (rYear === date.year) {\n      rYear = this.getRandomYear(date);\n    }\n\n    return rYear;\n  };\n}\n\nexport const month = new Month();\nexport const year = new Year();\n","import { month } from \"./Date\";\n\n//const API = \"https://api.jikan.moe/v3/\";\nconst API = process.env.REACT_APP_API;\nconst PROXY = \"\";\n\n/*const sleep = (milliseconds) => {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n};*/\n\nclass AnimeAPI {\n  titlelist = [];\n  animecontroller = new AbortController();\n\n  animeScissors = async (cyear, season, cmonth) => {\n    //console.log(`${API}season/${year}/${season}/`);\n    let animeJSON = await this.getSeason(cyear, season);\n    //console.log(animeJSON);\n    //let result = await getAnimelist(animeJSON);\n    return await this.getAnimelist(animeJSON, cmonth, cyear);\n  };\n\n  getSeason = async (cyear, season) => {\n    //setTimeout(() => this.animecontroller.abort(), 10000);\n    const signal = this.animecontroller.signal;\n\n    try {\n      const response = await fetch(`${PROXY}${API}season/${cyear}/${season}/`, {\n        signal,\n      }).then((res) => {\n        if (res.status === 429) {\n          console.log(\"Too many requests!\");\n        }\n        if (!res.ok) {\n          console.error(\"Could not fetch!\");\n        }\n        return res;\n      });\n      const resJSON = await response.json();\n      return resJSON[\"anime\"];\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  };\n\n  getAnimelist = (anime, cmonth, cyear) => {\n    let animelist = [];\n    animelist.push(anime.map((el) => el));\n    animelist = animelist[0];\n\n    for (const el in animelist) {\n      animelist[el] = {\n        id: animelist[el].mal_id,\n        title: animelist[el].title,\n        airing: month.convertToJapanTime(animelist[el].airing_start),\n        image: animelist[el].image_url,\n        studio: animelist[el].producers[0],\n        members: animelist[el].members,\n        titleArray: [],\n      };\n    }\n    this.titlelist = animelist;\n    this.getAnimeByMonth(cmonth, cyear);\n\n    //console.log(\"getAnimelist is \", titlelist);\n    return true;\n  };\n\n  sortAnime = (sortBy) => {\n    //console.log('sort has started!', titlelist);\n    if (sortBy === undefined) sortBy = 3;\n    let animelist = [...this.titlelist];\n\n    if (sortBy === 0) {\n      animelist.sort((a, b) => {\n        if (a.title > b.title) {\n          return 1;\n        } else if (a.title < b.title) {\n          return -1;\n        } else return 0;\n      });\n    } else if (sortBy === 1) {\n      animelist.sort((a, b) => {\n        if (a.members > b.members) {\n          return 1;\n        } else if (a.members < b.members) {\n          return -1;\n        } else return 0;\n      });\n    } else {\n      animelist.sort((a, b) => {\n        if (a.airing > b.airing) {\n          return 1;\n        } else if (a.airing < b.airing) {\n          return -1;\n        } else return 0;\n      });\n    }\n\n    this.titlelist = [...animelist];\n    //console.log(\"sort is finished!\", titlelist);\n  };\n\n  getAnimeByMonth = (cmonth, cyear) => {\n    //console.log(\"getAnimeByMonth: \", cmonth, cyear);\n    this.sortAnime(1);\n    let animelist = [...this.titlelist].reverse();\n    let newlist = [];\n    newlist.length = month.getLastDayOfMonth(cmonth, cyear);\n    newlist = this.fillNewList(newlist);\n\n    const firstDayOfMonth = new Date(`01 ${cmonth} ${cyear}`).getTime();\n    const lastDayOfMonth = new Date(\n      `${month.getLastDayOfMonth(cmonth, cyear)} ${cmonth} ${cyear}`\n    ).getTime();\n\n    //console.log(firstDayOfMonth, lastDayOfMonth);\n\n    animelist.forEach((a, index) => {\n      const currentDate = new Date(a.airing).getTime();\n\n      if (currentDate <= lastDayOfMonth && currentDate >= firstDayOfMonth) {\n        //console.log(firstDayOfMonth, currentDate, lastDayOfMonth);\n        //console.log(a, \"a.airing is true\");\n        a.day = new Date(a.airing).getDate();\n\n        if (newlist[a.day - 1].id) {\n          //console.log(\"temporal newlist is\", newlist);\n          newlist[a.day - 1][\"multi\"] = true;\n          newlist[a.day - 1].titleArray.push(a);\n        } else {\n          newlist[a.day - 1] = a;\n        }\n\n        return true;\n      }\n      return false;\n    });\n\n    //console.log(\"animelist after gabm is\", newlist);\n    this.titlelist = [...newlist];\n  };\n\n  fillNewList = (newlist) => {\n    let dumbTitle = {\n      id: \"\",\n      title: \"\",\n      airing: \"\",\n      image: \"\",\n      studio: { name: \"\" },\n      multi: false,\n      titleArray: [],\n    };\n\n    let animelist = [...newlist];\n    animelist.fill(dumbTitle, 0, animelist.length);\n    /*console.log(\n                      \"Filled list is \",\n                      animelist\n                    );*/\n    return animelist;\n  };\n}\n\nconst animeAPI = new AnimeAPI();\n\nexport default animeAPI;\n","import React, { useEffect } from \"react\";\n\nconst Loading = (props) => {\n  useEffect(() => {\n    document.body.classList.add(\"--overflow\");\n    return function cleanup() {\n      document.body.classList.remove(\"--overflow\");\n    };\n  }, []);\n\n  return (\n    <div aria-label=\"loading...\" className=\"Loading\">\n      {props.error.error ? `Error has occurred(╥﹏╥)` : `(っ◔◡◔)っ 🍜`}\n      {props.error.code ? console.log(props.error.code) : null}\n    </div>\n  );\n};\n\nexport default Loading;\n","import arrow from \"../graphics/arrow.svg\";\nimport React from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\n\nconst HeadMenu = React.memo((props) => {\n  const history = useHistory();\n  return (\n    <div aria-label=\"head navigation\" className=\"HeadContainer\">\n      <div className=\"HeadContainer__DateNav\">\n        {props.withParams ? (\n          <>\n            <button\n              tabIndex=\"0\"\n              className=\"HeadContainer__Button\"\n              onClick={() =>\n                history.push(`/malendar/${props.changeDate(-1, true)}`)\n              }\n              title=\"Previous month\"\n            >\n              <img\n                alt=\"back-arrow\"\n                style={{ transform: `rotate(180deg)` }}\n                src={arrow}\n              />\n            </button>\n            <button\n              tabIndex=\"0\"\n              className=\"HeadContainer__Button\"\n              onClick={() =>\n                history.push(`/malendar/${props.changeDate(1, true)}`)\n              }\n              title=\"Next month\"\n            >\n              <img alt=\"fur-arrow\" src={arrow} />\n            </button>\n            <div\n              aria-label=\"select month\"\n              className=\"HeadContainer__DateNav_DateMonth\"\n              onClick={() =>\n                history.push(`/malendar/${props.monthClick(true)}`)\n              }\n              title=\"Click for random month\"\n            >\n              {props.date.month}\n            </div>\n            <div\n              aria-label=\"select year\"\n              className=\"HeadContainer__DateNav_DateYear\"\n              onClick={() => history.push(`/malendar/${props.yearClick(true)}`)}\n              title=\"Click for random year\"\n            >\n              {props.date.year}\n            </div>\n          </>\n        ) : (\n          <>\n            <button\n              tabIndex=\"0\"\n              className=\"HeadContainer__Button\"\n              onClick={props.changeDate.bind(this, -1)}\n              title=\"Previous month\"\n            >\n              <img\n                alt=\"back-arrow\"\n                style={{ transform: `rotate(180deg)` }}\n                src={arrow}\n              />\n            </button>\n\n            <button\n              tabIndex=\"0\"\n              className=\"HeadContainer__Button\"\n              onClick={props.changeDate.bind(this, 1)}\n              title=\"Next month\"\n            >\n              <img alt=\"fur-arrow\" src={arrow} />\n            </button>\n            <div\n              aria-label=\"select month\"\n              className=\"HeadContainer__DateNav_DateMonth\"\n              onClick={props.monthClick}\n              title=\"Click for random month\"\n            >\n              {props.date.month}\n            </div>\n            <div\n              aria-label=\"select year\"\n              className=\"HeadContainer__DateNav_DateYear\"\n              onClick={props.yearClick}\n              title=\"Click for random year\"\n            >\n              {props.date.year}\n            </div>\n          </>\n        )}\n      </div>\n      <div\n        aria-label=\"select if you want to see ongoing or new releases\"\n        className=\"HeadContainer__ReleaseNav\"\n      >\n        <NavLink\n          aria-label=\"Ongoing page (WIP)\"\n          className={`padding-left`}\n          //onClick={handleClicked}\n          exact\n          to=\"/malendar/ongoing\"\n          activeClassName=\"HeadContainer__ReleaseNav--active\"\n          title=\"WIP\"\n        >\n          Ongoing\n        </NavLink>\n        <NavLink\n          strict\n          aria-label=\"New Releases\"\n          className={`padding-right`}\n          //onClick={handleClicked}\n          to={`/malendar/${props.date.year}${\"/\" + props.date.month}`}\n          activeClassName=\"HeadContainer__ReleaseNav--active\"\n          title=\"New Releases (pages mode)\"\n        >\n          New releases\n        </NavLink>\n      </div>\n    </div>\n  );\n});\n\nexport default HeadMenu;\n","import { useEffect, useState } from \"react\";\n\nconst usePlaceholderImage = (src) => {\n  const [sourceLoaded, setSourceLoaded] = useState(null);\n\n  useEffect(() => {\n    const img = new Image();\n    try {\n      img.src = src;\n      img.onload = () => setSourceLoaded(src);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [src]);\n\n  return sourceLoaded;\n};\n\nexport default usePlaceholderImage;\n","import React from \"react\";\n\nfunction useLocalState(defaultValue, key) {\n  const [value, setValue] = React.useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n  });\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n\nexport default useLocalState;\n","import React from \"react\";\nimport usePlaceholderImage from \"../api/usePlaceholderImage\";\nimport useLocalState from \"../api/useLocalState\";\n\nconst Day = React.memo((props) => {\n  const ani = props.ani;\n  const [month, year] = props.month;\n\n  const [imageURL] = useLocalState(ani.image, ani.id);\n\n  const handleClicked = () => {\n    if (ani.id) {\n      window.open(`https://myanimelist.net/anime/${ani.id}`, \"_blank\");\n    }\n  };\n\n  const multititleClicked = (e) => {\n    e.stopPropagation();\n    props.changeMV();\n  };\n\n  let loaded = usePlaceholderImage(ani.image.split(\".jpg\")[0] + \"l.jpg\");\n\n  let styledDay = {\n    background: `linear-gradient(180deg, rgba(0,0,0,0) 0%, #0E0E0E 105%), url(${\n      ani ? (loaded ? loaded : imageURL) : \"\"\n    }) center center / cover no-repeat`,\n  };\n\n  return (\n    <section\n      aria-label={\n        ani.id\n          ? `[${ani.id}] Anime is ${ani.title}, their airing date is ${ani.airing}`\n          : \"\"\n      }\n      className={`Days__Day ${\n        !ani.day || typeof ani.day === typeof \" \" ? \"Days__Day--filledDay\" : \"\"\n      } ${\n        props.id >\n        month.getLastDayOfMonth(year.getCurrentYear(), month.getCurrentMonth())\n          ? \"--hidden\"\n          : \"\"\n      }`}\n      style={ani.image ? styledDay : null}\n      onClick={handleClicked}\n      rel=\"nofollow noreferer\"\n      itemType=\"Anime\"\n      itemScope\n    >\n      <div className=\"Days__Day_Notificators\">\n        <time\n          className={`Days__Day_DayNum ${\n            parseInt(props.id) === props.today ? \"Days__Day_DayNum--mToday\" : \"\"\n          }`}\n          dateTime={ani.airing}\n          itemType=\"startDate\"\n        >\n          {ani.day && typeof ani.day !== typeof \" \"\n            ? ani.day.toString().padStart(2, \"0\")\n            : props.id}\n        </time>\n        {ani.multi ? (\n          <div\n            itemType=\"alsoThisDay\"\n            className=\"Days__Day_DayNum Days__Day_DayNum--MultititleNotification\"\n            onClick={multititleClicked}\n            title={`Also ${ani.titleArray.length} anime this day`}\n          >\n            {\"+\" + ani.titleArray.length}\n          </div>\n        ) : null}\n      </div>\n\n      <div className=\"Days__Day_CardTitle\">\n        <div className=\"Days__Day_CardTitle--DayTitle\" itemType=\"name\">\n          {ani\n            ? ani.title\n            : \"男子高校生で売れっ子ライトノベル作家をしているけれど、年下のクラスメイトで声優の女の子に首を絞められている! The Animation 2nd Season\"}\n        </div>\n        <div\n          className=\"Days__Day_CardTitle--DaySubtitle\"\n          itemType=\"productionCompany\"\n        >\n          {ani.studio ? ani.studio.name : \"Studio is currently unknown\"}\n        </div>\n      </div>\n    </section>\n  );\n});\n\nexport default Day;\n","import React from \"react\";\nimport Day from \"./day\";\nimport { month, year } from \"../api/Date\";\n\nconst Multititle = (props) => {\n  return (\n    <div className=\"MultiDay\">\n      <h1 className=\"MultiDay__Header\">\n        More for {new Date(props.date).getDate()}{\" \"}\n        {month.months[new Date(props.date).getMonth()] + \" \"}\n        {new Date(props.date).getFullYear()}\n      </h1>\n      <div className=\"MultiDay__Titles\">\n        {props.titles.map((el, i) => (\n          <div className=\"Days__DayContainer\" key={i}>\n            <Day\n              id={(i + 1).toString().padStart(2, \"0\")}\n              key={props.titles.id}\n              ani={props.titles[i]}\n              month={[month, year]}\n              today={new Date().getDate()}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Multititle;\n","import React from \"react\";\n\nconst DayPlaceholder = (props) => {\n  return (\n    <div\n      className={`Days__Day Days__Day--filledDay`}\n      aria-label=\"There is no anime for this day\"\n    >\n      <div className=\"Days__Day_Notificators\">\n        <time className={`Days__Day_DayNum`}>{props.id ? props.id : \"\"}</time>\n      </div>\n\n      <div className=\"Days__Day_CardTitle\">\n        <div className=\"Days__Day_CardTitle--DayTitle\" itemType=\"name\">\n          {\" \"}\n        </div>\n        <div\n          className=\"Days__Day_CardTitle--DaySubtitle\"\n          itemType=\"productionCompany\"\n        >\n          {\"  \"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DayPlaceholder;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Day from \"./day\";\nimport { month, year } from \"../api/Date\";\nimport Multititle from \"./multititle\";\nimport DayPlaceholder from \"./Skeleton/dayPlaceholder\";\n\nconst DayContainer = React.memo((props) => {\n  const [multiState, setMultiState] = useState(false);\n  const isMulti = useRef(false);\n\n  const pMonth = props.month;\n  const { i, titles, filler } = props;\n  let multititle = null;\n\n  useEffect(\n    () => {\n      if (titles[i].multi) {\n        isMulti.current = true;\n        if (isMulti.current) changeState(false);\n        console.log(\"XDDD\");\n      }\n      return () => (isMulti.current = false);\n    },\n    //eslint-disable-next-line\n    [pMonth]\n  );\n\n  const changeState = (forceState = undefined) => {\n    if (forceState !== undefined) {\n      setMultiState(forceState);\n    } else setMultiState(!multiState);\n  };\n\n  if (titles[i].multi) {\n    multititle = (\n      <Multititle\n        date={titles[i].airing}\n        titles={titles[i].titleArray}\n        MV={multiState}\n        key={titles[i].id + \"_\" + multiState.toString()}\n      />\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <li\n        className={`Days__DayContainer ${\n          !titles[i].day || typeof titles[i].day === typeof \" \"\n            ? \"Days__Day--filledDay\"\n            : \"\"\n        }`}\n        key={\"Container__\" + i}\n      >\n        {titles[i].id ? (\n          <Day\n            id={filler ? \" \" : (i + 1).toString().padStart(2, \"0\")}\n            key={titles[i].id}\n            ani={titles[i]}\n            month={[month, year]}\n            today={new Date().getDate()}\n            changeMV={changeState}\n          />\n        ) : (\n          <DayPlaceholder\n            id={filler ? \" \" : (i + 1).toString().padStart(2, \"0\")}\n          />\n        )}\n      </li>\n      {multiState ? multititle : \"\"}\n    </React.Fragment>\n  );\n});\n\nexport default DayContainer;\n","import React from \"react\";\n\nconst Ongoing = () => {\n  return [\n    <li key=\"mm_1\">教えて 教えてよ その仕組みを 僕の中に誰がいるの？</li>,\n    <li key=\"mm_2\">壊れた 壊れたよ この世界で 君が笑う 何も見えずに</li>,\n\n    <li key=\"mm_3\">壊れた僕なんてさ 息を止めて</li>,\n    <li key=\"mm_4\">ほどけない もう ほどけないよ 真実さえ freeze</li>,\n    <li key=\"mm_5\">壊せる 壊せない 狂える 狂えない</li>,\n    <li key=\"mm_6\">あなたを見つけて 揺れた</li>,\n\n    <li key=\"mm_7\">歪んだ世界にだんだん僕は透き通って見えなくなって</li>,\n    <li key=\"mm_8\">見つけないで 僕のことを 見つめないで</li>,\n    <li key=\"mm_9\">誰かが描いた世界の中で あなたを傷つけたくはないよ</li>,\n    <li key=\"mm_10\">憶えていて 僕のことを 鮮やかなまま</li>,\n\n    <li key=\"mm_11\">無限に広がる孤独が絡まる 無邪気に笑った記憶が刺さって</li>,\n    <li key=\"mm_12\">\n      動けない 動けない 動けない 動けない 動けない 動けないよ\n    </li>,\n    <li key=\"mm_13\">unraveling the world</li>,\n\n    <li key=\"mm_14\">変わってしまった 変えられなかった</li>,\n    <li key=\"mm_15\">2つが絡まる 2人が滅びる</li>,\n    <li key=\"mm_16\">壊せる 壊せない 狂える 狂えない</li>,\n    <li key=\"mm_17\">あなたを汚せないよ 揺れた</li>,\n\n    <li key=\"mm_18\">歪んだ世界にだんだん僕は透き通って見えなくなって</li>,\n    <li key=\"mm_19\">見つけないで 僕のことを 見つめないで</li>,\n    <li key=\"mm_20\">誰かが仕組んだ孤独な罠に 未来がほどけてしまう前に</li>,\n    <li key=\"mm_21\">思い出して 僕のことを 鮮やかなまま</li>,\n\n    <li key=\"mm_22\">忘れないで 忘れないで 忘れないで 忘れないで</li>,\n    <li key=\"mm_23\">変わってしまったことに paralyze</li>,\n    <li key=\"mm_24\">変えられないことだらけparadise</li>,\n    <li key=\"mm_25\">憶えてて 僕のことを</li>,\n\n    <li key=\"mm_26\">教えて 教えて 僕の中に誰かいるの？</li>,\n  ];\n};\n\nexport default Ongoing;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useLocation, useParams } from \"react-router\";\nimport \"./Styling/container.css\";\nimport AnimeAPI from \"../api/getanime\";\nimport { month, year } from \"../api/Date\";\nimport Loading from \"./loading\";\nimport HeadMenu from \"./headMenu\";\nimport DayContainer from \"./dayContainer\";\nimport Ongoing from \"./ongoing\";\nimport DayPlaceholder from \"./Skeleton/dayPlaceholder\";\n\nconst Container = () => {\n  const location = useLocation();\n  const { navYear, navMonth } = useParams();\n  const [titles, setTitles] = useState([]);\n  const [date, setDate] = useState({\n    month: month.getCurrentMonth(),\n    year: 2020,\n  });\n  const [isLoading, setLoadingState] = useState(false);\n  const [isError, setErrorState] = useState({ error: false, code: \"\" });\n  const [fillerWeek, setFillerWeek] = useState([]);\n\n  const isRendered = useRef(false);\n\n  useEffect(() => {\n    let currentMonth = month.getCurrentMonth();\n    let currentYear = year.getCurrentYear();\n\n    if (navYear && navYear >= 1917 && navYear <= 2022 && navMonth) {\n      currentMonth = navMonth.charAt(0).toUpperCase() + navMonth.slice(1);\n      currentYear = navYear;\n    }\n\n    if (date.month !== currentMonth || date.year !== currentYear)\n      setDate({ month: currentMonth, year: currentYear });\n\n    console.log(\"titlelist had updated!\");\n\n    //eslint-disable-next-line\n  }, [location]);\n\n  useEffect(() => {\n    isRendered.current = true;\n\n    function setFirstDay() {\n      let tempFillerWeek = [];\n      let firstWeekDay =\n        month.getFirstWeekDayOfMonth(date.month, date.year) - 1;\n      if (firstWeekDay < 0) firstWeekDay = 6;\n      tempFillerWeek.length = firstWeekDay;\n      tempFillerWeek = AnimeAPI.fillNewList(tempFillerWeek, {\n        day: \" \",\n      });\n      setFillerWeek((fillerWeek) => (fillerWeek = [...tempFillerWeek]));\n      //console.log(\"sFD calculated\");\n      return tempFillerWeek;\n    }\n\n    async function xd() {\n      toggleLoadState(true);\n\n      try {\n        await AnimeAPI.animeScissors(\n          date.year,\n          month.getSeasonByMonth(date.month),\n          date.month\n        );\n\n        await setTitles((titles) => (titles = [...AnimeAPI.titlelist]));\n        if (isRendered.current) setFirstDay();\n      } catch (error) {\n        setErrorState({ error: true, code: error });\n      }\n\n      document.title = `malendar for ${date.month} ${date.year}`;\n      toggleLoadState(false);\n    }\n\n    if (isRendered.current) xd();\n\n    return () => (isRendered.current = false);\n\n    //eslint-disable-next-line\n  }, [date]);\n\n  const toggleLoadState = (shouldLoad) => {\n    if (shouldLoad) {\n      setLoadingState(true);\n      setErrorState({ error: false, code: \"\" });\n    } else {\n      setLoadingState(false);\n    }\n  };\n\n  const monthClick = (withParams = false) => {\n    let nMonth = month.getRandomMonth(date);\n    setDate({ ...date, month: nMonth });\n    if (withParams) return date.year + \"/\" + nMonth;\n    console.log(\"Current season is\", month.getSeasonByMonth(date.month));\n  };\n\n  const yearClick = (withParams = false) => {\n    let nYear = year.getRandomYear(date);\n    setDate({ ...date, year: nYear });\n    if (withParams) return nYear + \"/\" + date.month;\n  };\n\n  const changeDate = (direction, withParams = false) => {\n    if (date.month === \"January\" && direction < 0) {\n      setDate({ month: \"December\", year: parseInt(date.year) - 1 });\n      if (withParams) return parseInt(date.year) - 1 + \"/December\";\n    } else if (date.month === \"December\" && direction > 0) {\n      setDate({ month: \"January\", year: parseInt(date.year) + 1 });\n      if (withParams) return parseInt(date.year) + 1 + \"/January\";\n    } else {\n      setDate({\n        ...date,\n        month:\n          month.months[\n            month.months.findIndex((e) => e === date.month) + direction\n          ],\n      });\n      if (withParams)\n        return (\n          parseInt(date.year) +\n          \"/\" +\n          month.months[\n            month.months.findIndex((e) => e === date.month) + direction\n          ]\n        );\n    }\n  };\n\n  return (\n    <main className=\"Container\">\n      <HeadMenu\n        monthClick={monthClick}\n        yearClick={yearClick}\n        date={date}\n        changeDate={changeDate}\n        withParams={!!(navYear && navMonth)}\n      />\n      {isLoading || isError.error ? <Loading error={isError} /> : null}\n      <Weekdays />\n      <ol className={`Days`}>\n        <Switch>\n          <Route exact path=\"/malendar/ongoing\">\n            <Ongoing />\n          </Route>\n          <Route exact path=\"/malendar/:navYear/:navMonth\">\n            {fillerWeek.map((el, i) => (\n              <li\n                className={`Days__DayContainer Days__Day--filledDay`}\n                key={\"Container__\" + i}\n              >\n                <DayPlaceholder key={\"DayPlaceholder__\" + i} />\n              </li>\n            ))}\n            {titles.map((el, i) => (\n              <DayContainer\n                i={i}\n                titles={titles}\n                key={\"DayContainer__\" + i}\n                filler={false}\n                month={date.month}\n              />\n            ))}\n          </Route>\n          <Route exact path=\"/malendar/\">\n            {fillerWeek.map((el, i) => (\n              <li\n                className={`Days__DayContainer Days__Day--filledDay`}\n                key={\"Container__\" + i}\n              >\n                <DayPlaceholder key={\"DayPlaceholder__\" + i} />\n              </li>\n            ))}\n\n            {titles.map((el, i) => (\n              <DayContainer\n                i={i}\n                titles={titles}\n                key={\"DayContainer__\" + i}\n                filler={false}\n                month={date.month}\n              />\n            ))}\n          </Route>\n        </Switch>\n      </ol>\n    </main>\n  );\n};\n\nconst Weekdays = () => (\n  <ul className=\"Days__WeekDays\">\n    <li>M</li>\n    <li>T</li>\n    <li>W</li>\n    <li>T</li>\n    <li>F</li>\n    <li>S</li>\n    <li>S</li>\n  </ul>\n);\n\nexport default Container;\n","import React, { useEffect, useState } from \"react\";\n\nconst About = () => {\n  const [status, setStatus] = useState(0);\n  useEffect(() => {\n    (async function getStatus() {\n      let serverStatus = await fetch(\n        process.env.REACT_APP_API + \"anime/1\"\n      ).then((res) => {\n        return res.status.toString();\n      });\n      //status = status.json();\n      setStatus((status) => (status = serverStatus));\n    })();\n  }, []);\n\n  return (\n    <main className=\"Container About\">\n      <h1>\n        <span role=\"img\" aria-label=\"narutomaki is a symbol of malendar\">\n          🍥\n        </span>\n        malendar\n        <span role=\"img\" aria-label=\"narutomaki is a symbol of malendar\">\n          🍥\n        </span>\n      </h1>\n\n      <section>\n        <p>\n          Malendar is a web-application that allows you to see calendar for\n          upcoming (and past) anime releases!\n        </p>\n      </section>\n\n      <section>Server status: {status}</section>\n    </main>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport \"./Styling/news.css\";\n\nconst News = () => {\n  return (\n    <div className=\"News\">\n      <h1>What's new?</h1>\n      <section>\n        <h2>07.17.2020 update</h2>\n        <ul>\n          <h3>Features: </h3>\n          <li>\n            <b>Slightly beautiful 404 page</b>\n          </li>\n          <li>\n            Navigation between /yy/mm/ pages should be more correct since now\n          </li>\n          <li>Random dates should work as intended</li>\n\n          <h3>Bugfixes: </h3>\n          <li>Fixed bug with invalid behaviour of multititles (Issue #1)</li>\n          <li>Fixed bug with missed days numbers</li>\n          <li>Some behaviour with loading/error screen was also fixed</li>\n          <h3>In nearest future: </h3>\n          <li>Ongoing page</li>\n          <li>About page</li>\n          <li>Light theme</li>\n        </ul>\n      </section>\n      <section>\n        <h2>07.15.2020 update</h2>\n        <ul>\n          <h3>Features: </h3>\n          <li>Implemented header navigation</li>\n          <li>Added weekdays and w-d marks</li>\n          <li>\n            You can open exact date using links: <br />\n            <small>\n              https://shrmnn.github.io/malendar/1999/January for example; <br />\n              <del>Doesn't work for random dates (yet)</del>\n            </small>\n          </li>\n          <h3>Bugfixes: </h3>\n          <li>Fixed bug with macOS bounce scroll background color</li>\n          <li>Fixed bug with incorrect number of days per month</li>\n          <h3>In nearest future: </h3>\n          <li>Ongoing page</li>\n          <li>About page</li>\n          <li>\n            <del>Slightly beautiful 404 page</del>\n          </li>\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default News;\n","import React, { useEffect } from \"react\";\nimport useLocalState from \"../api/useLocalState\";\nimport \"./Styling/footer.css\";\nimport moon from \"../graphics/moon.svg\";\n\nconst Footer = React.memo(() => {\n  const [toggledTheme, toggleTheme] = useLocalState(true, \"toggled\");\n\n  useEffect(() => {\n    if (toggledTheme) {\n      document.documentElement.classList.remove(\"blue\");\n    } else {\n      document.documentElement.classList.add(\"blue\");\n    }\n  }, [toggledTheme]);\n\n  const changeTheme = () => {\n    toggleTheme(!toggledTheme);\n  };\n\n  return (\n    <footer className=\"Footer\">\n      <div\n        aria-label=\"Author of site is Alex Shermann, made in 2020\"\n        className=\"Footer__Right\"\n      >\n        malendar [2020] Alex Shermann\n      </div>\n      <div className=\"Footer__Left\">\n        <p\n          aria-label=\"Site is recommended for 18+\"\n          className=\"marker\"\n          title=\"Site is recommended for 18+\"\n        >\n          18+\n        </p>\n        <img\n          alt=\"change theme\"\n          aria-label=\"change theme\"\n          height=\"32\"\n          width=\"32\"\n          src={moon}\n          onClick={changeTheme}\n          className={toggledTheme ? \"Footer__Left--toggled\" : \"\"}\n        />\n        <a\n          aria-label=\"Link to github\"\n          href=\"https://github.com/shrmnn/malendar\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"GitHub\"\n        >\n          <img\n            alt=\"github link\"\n            aria-label=\"github link\"\n            height=\"32\"\n            width=\"32\"\n            className=\"Footer__Left--github\"\n            src=\"https://unpkg.com/simple-icons@v3/icons/github.svg\"\n          />\n        </a>\n      </div>\n    </footer>\n  );\n});\n\nexport default Footer;\n","import React, { useEffect } from \"react\";\nimport { month, year } from \"../api/Date\";\nimport \"./Styling/FourZeroFour.css\";\nimport Logo from \"../graphics/fourzerofour.webp\";\n\nconst FourZeroFour = () => {\n  useEffect(() => {\n    document.title = \"404. You shall (not) find\";\n    const header = document.querySelector(\".Header\");\n\n    header.classList.add(\"--shadow\");\n    return function cleanup() {\n      header.classList.remove(\"--shadow\");\n    };\n  }, []);\n\n  const randomlink =\n    \"https://shrmnn.github.io/malendar/\" +\n    year.getRandomYear(2020) +\n    \"/\" +\n    month.getRandomMonth(\"January\");\n\n  return (\n    <div className=\"FourZeroFour\">\n      <div></div>\n      <h1>{\"fourzerofour      fourzerofouru\"}</h1>\n      <h2 title=\"Page not found\">\n        {\"おしえて おしえて よ\\t \\tページが見つかりません\"}\n      </h2>\n      <a\n        aria-label=\"Link to random page. Maybe it would be better than 404 page\"\n        title=\"What about random page?\"\n        href={randomlink}\n      >\n        <img alt=\"404 error\" src={Logo} />\n      </a>\n    </div>\n  );\n};\n\nexport default FourZeroFour;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Components/header\";\nimport Container from \"./Components/container\";\nimport About from \"./Components/about\";\nimport News from \"./Components/news\";\nimport Footer from \"./Components/footer\";\n\nimport \"./App.css\";\nimport FourZeroFour from \"./Components/FourZeroFour\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className=\"Content\">\n          <Switch>\n            <Route exact path=\"/malendar/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/malendar/news\">\n              <News />\n            </Route>\n            <Route exact path=\"/malendar/ongoing\">\n              <Container />\n            </Route>\n            <Route exact path=\"/malendar/:navYear/:navMonth\">\n              <Container />\n            </Route>\n            <Route exact path=\"/malendar/\">\n              <Container />\n            </Route>\n            <Route>\n              <FourZeroFour />\n            </Route>\n          </Switch>\n          <Footer />\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}