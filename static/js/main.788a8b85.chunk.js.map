{"version":3,"sources":["api/Date.js","graphics/arrow.svg","api/useLocalState.js","api/usePlaceholderImage.js","Components/day.js","graphics/moon.svg","Components/header.js","api/getanime.js","Components/loading.js","Components/headMenu.js","Components/Skeleton/multititlePlaceholder.js","Components/Skeleton/dayPlaceholder.js","Components/dayContainer.js","Components/ongoing.js","Components/container.js","Components/about.js","Components/news.js","Components/footer.js","Components/FourZeroFour.js","App.js","serviceWorker.js","index.js"],"names":["month","months","getRandomMonth","date","rMonth","Math","ceil","random","getSeasonByMonth","cmonth","getCurrentMonth","Date","getMonth","getLastDayOfMonth","cyear","convertToLocale","getDate","locale","time","toLocaleString","convertToJapanTime","timeZone","getFirstWeekDayOfMonth","getDay","year","getCurrentYear","getFullYear","getRandomYear","rYear","module","exports","useLocalState","defaultValue","key","React","useState","stickyValue","window","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","usePlaceholderImage","src","sourceLoaded","setSourceLoaded","img","Image","onload","Day","memo","props","ani","image","id","imageURL","loaded","split","styledDay","background","aria-label","title","airing","className","day","style","onClick","open","rel","itemType","itemScope","parseInt","today","dateTime","toString","padStart","multi","e","stopPropagation","changeMV","titleArray","length","studio","name","Header","to","activeClassName","animeAPI","titlelist","animeScissors","season","a","getSeason","animeJSON","getAnimelist","fetch","process","then","res","status","console","log","ok","error","response","json","resJSON","anime","animelist","el","push","map","mal_id","airing_start","image_url","producers","members","getAnimeByMonth","sortAnime","sortBy","undefined","sort","b","reverse","newlist","fillNewList","firstDayOfMonth","getTime","lastDayOfMonth","forEach","index","currentDate","fill","Loading","code","HeadMenu","history","useHistory","withParams","tabIndex","changeDate","alt","transform","arrow","bind","monthClick","yearClick","exact","strict","MultititlePlaceholder","display","content","DayPlaceholder","DayContainer","multititleState","setMultititleState","currentDay","setCurrentDay","Multititle","lazy","i","titles","filler","Fragment","arraylist","fallback","MV","Ongoing","Weekdays","Container","currentMonth","currentYear","useParams","navYear","navMonth","setTitles","setDate","isLoading","setLoadingState","isError","setErrorState","fillerWeek","setFillerWeek","setFirstDay","tempFillerWeek","firstWeekDay","AnimeAPI","document","body","classList","add","remove","xd","nMonth","nYear","direction","findIndex","path","About","setStatus","role","News","Footer","toggledTheme","toggleTheme","documentElement","height","width","moon","href","target","FourZeroFour","randomlink","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.788a8b85.chunk.js","sourcesContent":["class Month {\n  months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  getRandomMonth = (date) => {\n    let rMonth = this.months[Math.ceil(Math.random() * 11)];\n\n    if (rMonth === date.month) {\n      rMonth = this.getRandomMonth(date);\n    }\n\n    return rMonth;\n  };\n\n  getSeasonByMonth = (cmonth) => {\n    let season = \"\";\n    if (cmonth === \"January\" || cmonth === \"February\" || cmonth === \"March\") {\n      season = \"winter\";\n    } else if (cmonth === \"April\" || cmonth === \"May\" || cmonth === \"June\") {\n      season = \"spring\";\n    } else if (\n      cmonth === \"July\" ||\n      cmonth === \"August\" ||\n      cmonth === \"September\"\n    ) {\n      season = \"summer\";\n    } else season = \"fall\";\n\n    return season;\n  };\n\n  getCurrentMonth = () => {\n    return this.months[new Date().getMonth()];\n  };\n\n  getLastDayOfMonth = (cmonth, cyear) => {\n    let gldm = new Date(\n      cyear,\n      this.convertToLocale(\n        \"en-US\",\n        new Date(`${cmonth} 01 ${cyear}`)\n      ).getMonth() + 1,\n      0\n    ).getDate();\n    return gldm;\n  };\n\n  convertToLocale = (locale, time) => {\n    return new Date(new Date(time).toLocaleString(locale));\n  };\n\n  convertToJapanTime = (time) => {\n    return new Date(time).toLocaleString(\"en-US\", { timeZone: \"Japan\" });\n  };\n\n  getFirstWeekDayOfMonth = (cmonth, cyear) => {\n    let tempDate = new Date(\n      this.convertToLocale(\"en-US\", `${cmonth} 01 ${cyear}`)\n    );\n    return tempDate.getDay();\n  };\n}\n\nclass Year {\n  getCurrentYear = () => {\n    return new Date().getFullYear();\n  };\n\n  getRandomYear = (date) => {\n    let rYear = Math.ceil(Math.random() * 15) + 2000;\n\n    if (rYear === date.year) {\n      rYear = this.getRandomYear(date);\n    }\n\n    return rYear;\n  };\n}\n\nexport const month = new Month();\nexport const year = new Year();\n","module.exports = __webpack_public_path__ + \"static/media/arrow.2c511b88.svg\";","import React from \"react\";\n\nfunction useLocalState(defaultValue, key) {\n  const [value, setValue] = React.useState(() => {\n    const stickyValue = window.localStorage.getItem(key);\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\n  });\n  React.useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n\nexport default useLocalState;\n","import { useEffect, useState } from \"react\";\n\nconst usePlaceholderImage = (src) => {\n  const [sourceLoaded, setSourceLoaded] = useState(null);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = src;\n    img.onload = () => setSourceLoaded(src);\n  }, [src]);\n\n  return sourceLoaded;\n};\n\nexport default usePlaceholderImage;\n","import React from \"react\";\nimport usePlaceholderImage from \"../api/usePlaceholderImage\";\nimport useLocalState from \"../api/useLocalState\";\n\nconst Day = React.memo((props) => {\n  const ani = props.ani;\n  const [month, year] = props.month;\n\n  const [imageURL] = useLocalState(ani.image, ani.id);\n\n  const handleClicked = () => {\n    if (ani.id) {\n      window.open(`https://myanimelist.net/anime/${ani.id}`, \"_blank\");\n    }\n  };\n\n  const multititleClicked = (e) => {\n    e.stopPropagation();\n    props.changeMV(ani.day - 1);\n  };\n\n  let loaded = usePlaceholderImage(ani.image.split(\".jpg\")[0] + \"l.jpg\");\n\n  let styledDay = {\n    background: `linear-gradient(180deg, rgba(0,0,0,0) 0%, #0E0E0E 105%), url(${\n      ani ? (!loaded ? imageURL : loaded) : \"\"\n    }) center center / cover no-repeat`,\n  };\n\n  return (\n    <section\n      aria-label={\n        ani.id\n          ? `[${ani.id}] Anime is ${ani.title}, their airing date is ${ani.airing}`\n          : \"\"\n      }\n      className={`Days__Day ${\n        !ani.day || typeof ani.day === typeof \" \" ? \"Days__Day--filledDay\" : \"\"\n      } ${\n        props.id >\n        month.getLastDayOfMonth(year.getCurrentYear(), month.getCurrentMonth())\n          ? \"--hidden\"\n          : \"\"\n      }`}\n      style={ani.image ? styledDay : null}\n      onClick={handleClicked}\n      rel=\"nofollow noreferer\"\n      itemType=\"Anime\"\n      itemScope\n    >\n      <div className=\"Days__Day_Notificators\">\n        <time\n          className={`Days__Day_DayNum ${\n            parseInt(props.id) === props.today ? \"Days__Day_DayNum--mToday\" : \"\"\n          }`}\n          dateTime={ani.airing}\n          itemType=\"startDate\"\n        >\n          {ani.day && typeof ani.day !== typeof \" \"\n            ? ani.day.toString().padStart(2, \"0\")\n            : props.id}\n        </time>\n        {ani.multi ? (\n          <div\n            itemType=\"alsoThisDay\"\n            className=\"Days__Day_DayNum Days__Day_DayNum--MultititleNotification\"\n            onClick={multititleClicked}\n            title={`Also ${ani.titleArray.length} anime this day`}\n          >\n            {\"+\" + ani.titleArray.length}\n          </div>\n        ) : null}\n      </div>\n\n      <div className=\"Days__Day_CardTitle\">\n        <div className=\"Days__Day_CardTitle--DayTitle\" itemType=\"name\">\n          {ani\n            ? ani.title\n            : \"男子高校生で売れっ子ライトノベル作家をしているけれど、年下のクラスメイトで声優の女の子に首を絞められている! The Animation 2nd Season\"}\n        </div>\n        <div\n          className=\"Days__Day_CardTitle--DaySubtitle\"\n          itemType=\"productionCompany\"\n        >\n          {ani.studio ? ani.studio.name : \"Studio is currently unknown\"}\n        </div>\n      </div>\n    </section>\n  );\n});\n\nexport default Day;\n","module.exports = __webpack_public_path__ + \"static/media/moon.d58b953a.svg\";","import React from \"react\";\nimport \"./Styling/header.css\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nconst Header = () => {\n  return (\n    <header className=\"Header\">\n      <Link aria-label=\"Site logo\" className=\"Logo\" to=\"/malendar/\">\n        <div className=\"Header__Logo--M\">M</div>C\n      </Link>\n      <nav className=\"Menu\">\n        <NavLink\n          aria-label=\"Link to update feed\"\n          className=\"Menu\"\n          to=\"/malendar/news\"\n          title=\"WIP\"\n          activeClassName=\"Header--active\"\n        >\n          What's new\n        </NavLink>\n        <NavLink\n          aria-label=\"Link to about page\"\n          className=\"Menu\"\n          to=\"/malendar/about\"\n          title=\"WIP\"\n          activeClassName=\"Header--active\"\n        >\n          About\n        </NavLink>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import { month } from \"./Date\";\n\n//const API = \"https://api.jikan.moe/v3/\";\nconst API = process.env.REACT_APP_API;\nconst PROXY = \"\";\n\n/*const sleep = (milliseconds) => {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n};*/\n\nclass AnimeAPI {\n  titlelist = [];\n\n  animeScissors = async (cyear, season, cmonth) => {\n    //console.log(`${API}season/${year}/${season}/`);\n    let animeJSON = await this.getSeason(cyear, season);\n    //console.log(animeJSON);\n    //let result = await getAnimelist(animeJSON);\n    return await this.getAnimelist(animeJSON, cmonth, cyear);\n  };\n\n  getSeason = async (cyear, season) => {\n    const response = await fetch(`${PROXY}${API}season/${cyear}/${season}/`)\n      //const response = await fetch(`${PROXY}${API}schedule/`)\n      //const response = await fetch(`${API}season/`)\n      .then((res) => {\n        //console.log(res);\n        if (res.status === 429) {\n          console.log(\"Too many requests!\");\n        }\n        //console.log('response is ', res);\n        if (!res.ok) {\n          console.error(\"Could not fetch!\");\n        }\n        return res;\n      });\n    //console.log(`Fetching ${PROXY}${API}season/${year}/${season}/`);\n\n    const resJSON = await response.json();\n    return resJSON[\"anime\"];\n  };\n\n  getAnimelist = (anime, cmonth, cyear) => {\n    let animelist = [];\n    animelist.push(anime.map((el) => el));\n    animelist = animelist[0];\n\n    for (const el in animelist) {\n      animelist[el] = {\n        id: animelist[el].mal_id,\n        title: animelist[el].title,\n        airing: month.convertToJapanTime(animelist[el].airing_start),\n        image: animelist[el].image_url,\n        studio: animelist[el].producers[0],\n        members: animelist[el].members,\n        titleArray: [],\n      };\n    }\n    this.titlelist = animelist;\n    this.getAnimeByMonth(cmonth, cyear);\n\n    //console.log(\"getAnimelist is \", titlelist);\n    return true;\n  };\n\n  sortAnime = (sortBy) => {\n    //console.log('sort has started!', titlelist);\n    if (sortBy === undefined) sortBy = 3;\n    let animelist = [...this.titlelist];\n\n    if (sortBy === 0) {\n      animelist.sort((a, b) => {\n        if (a.title > b.title) {\n          return 1;\n        } else if (a.title < b.title) {\n          return -1;\n        } else return 0;\n      });\n    } else if (sortBy === 1) {\n      animelist.sort((a, b) => {\n        if (a.members > b.members) {\n          return 1;\n        } else if (a.members < b.members) {\n          return -1;\n        } else return 0;\n      });\n    } else {\n      animelist.sort((a, b) => {\n        if (a.airing > b.airing) {\n          return 1;\n        } else if (a.airing < b.airing) {\n          return -1;\n        } else return 0;\n      });\n    }\n\n    this.titlelist = [...animelist];\n    //console.log(\"sort is finished!\", titlelist);\n  };\n\n  getAnimeByMonth = (cmonth, cyear) => {\n    //console.log(\"getAnimeByMonth: \", cmonth, cyear);\n    this.sortAnime(1);\n    let animelist = [...this.titlelist].reverse();\n    let newlist = [];\n    newlist.length = month.getLastDayOfMonth(cmonth, cyear);\n    newlist = this.fillNewList(newlist);\n\n    const firstDayOfMonth = new Date(`01 ${cmonth} ${cyear}`).getTime();\n    const lastDayOfMonth = new Date(\n      `${month.getLastDayOfMonth(cmonth, cyear)} ${cmonth} ${cyear}`\n    ).getTime();\n\n    //console.log(firstDayOfMonth, lastDayOfMonth);\n\n    animelist.forEach((a, index) => {\n      const currentDate = new Date(a.airing).getTime();\n\n      if (currentDate <= lastDayOfMonth && currentDate >= firstDayOfMonth) {\n        //console.log(firstDayOfMonth, currentDate, lastDayOfMonth);\n        //console.log(a, \"a.airing is true\");\n        a.day = new Date(a.airing).getDate();\n\n        if (newlist[a.day - 1].id) {\n          //console.log(\"temporal newlist is\", newlist);\n          newlist[a.day - 1][\"multi\"] = true;\n          newlist[a.day - 1].titleArray.push(a);\n        } else {\n          newlist[a.day - 1] = a;\n        }\n\n        return true;\n      }\n      return false;\n    });\n\n    //console.log(\"animelist after gabm is\", newlist);\n    this.titlelist = [...newlist];\n  };\n\n  fillNewList = (newlist) => {\n    let dumbTitle = {\n      id: \"\",\n      title: \"\",\n      airing: \"\",\n      image: \"\",\n      studio: { name: \"\" },\n      multi: false,\n      titleArray: [],\n    };\n\n    let animelist = [...newlist];\n    animelist.fill(dumbTitle, 0, animelist.length);\n    /*console.log(\n          \"Filled list is \",\n          animelist\n        );*/\n    return animelist;\n  };\n}\nconst animeAPI = new AnimeAPI();\n\nexport default animeAPI;\n","import React from \"react\";\n\nconst Loading = (props) => (\n  <div aria-label=\"loading...\" className=\"Loading\">\n    {props.error.error ? `Error has occurred(╥﹏╥)` : `(っ◔◡◔)っ 🍜`}\n    {props.error.code ? console.log(props.error.code) : null}\n  </div>\n);\n\nexport default Loading;\n","import arrow from \"../graphics/arrow.svg\";\nimport React from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\n\nconst HeadMenu = React.memo((props) => {\n  const history = useHistory();\n  return (\n    <div aria-label=\"head navigation\" className=\"HeadContainer\">\n      <div className=\"HeadContainer__DateNav\">\n        {props.withParams ? (\n          <>\n            <button\n              tabIndex=\"0\"\n              className=\"HeadContainer__Button\"\n              onClick={() => history.push(`/${props.changeDate(-1, true)}`)}\n              title=\"Previous month\"\n            >\n              <img\n                alt=\"back-arrow\"\n                style={{ transform: `rotate(180deg)` }}\n                src={arrow}\n              />\n            </button>\n            <button\n              tabIndex=\"0\"\n              className=\"HeadContainer__Button\"\n              onClick={() => history.push(`/${props.changeDate(1, true)}`)}\n              title=\"Next month\"\n            >\n              <img alt=\"fur-arrow\" src={arrow} />\n            </button>\n          </>\n        ) : (\n          <>\n            <button\n              tabIndex=\"0\"\n              className=\"HeadContainer__Button\"\n              onClick={props.changeDate.bind(this, -1)}\n              title=\"Previous month\"\n            >\n              <img\n                alt=\"back-arrow\"\n                style={{ transform: `rotate(180deg)` }}\n                src={arrow}\n              />\n            </button>\n\n            <button\n              tabIndex=\"0\"\n              className=\"HeadContainer__Button\"\n              onClick={props.changeDate.bind(this, 1)}\n              title=\"Next month\"\n            >\n              <img alt=\"fur-arrow\" src={arrow} />\n            </button>\n          </>\n        )}\n\n        <div\n          aria-label=\"select month\"\n          className=\"HeadContainer__DateNav_DateMonth\"\n          onClick={props.monthClick}\n          title=\"Click for random month\"\n        >\n          {props.date.month}\n        </div>\n        <div\n          aria-label=\"select year\"\n          className=\"HeadContainer__DateNav_DateYear\"\n          onClick={props.yearClick}\n          title=\"Click for random year\"\n        >\n          {props.date.year}\n        </div>\n      </div>\n      <div\n        aria-label=\"select if you want to see ongoing or new releases\"\n        className=\"HeadContainer__ReleaseNav\"\n      >\n        <NavLink\n          className={`padding-left`}\n          //onClick={handleClicked}\n          exact\n          to=\"/malendar/ongoing\"\n          activeClassName=\"HeadContainer__ReleaseNav--active\"\n        >\n          Ongoing\n        </NavLink>\n        <NavLink\n          strict\n          className={`padding-right`}\n          //onClick={handleClicked}\n          to={`/malendar/${props.date.year}${\"/\" + props.date.month}`}\n          activeClassName=\"HeadContainer__ReleaseNav--active\"\n        >\n          New releases\n        </NavLink>\n      </div>\n    </div>\n  );\n});\n\nexport default HeadMenu;\n","import React from \"react\";\n\nconst MultititlePlaceholder = (props) => {\n  return (\n    <div\n      className=\"MultiDay\"\n      style={{\n        display: \"none\",\n      }}\n    >\n      <h1 className=\"MultiDay__Header\" content={\"There is no content\"}>\n        {\"\"}\n      </h1>\n      <div className=\"MultiDay__Titles\">{\"\"}</div>\n    </div>\n  );\n};\n\nexport default MultititlePlaceholder;\n","import React from \"react\";\n\nconst DayPlaceholder = () => {\n  return (\n    <div\n      className={`Days__Day Days__Day--filledDay`}\n      aria-label=\"There is no anime for this day\"\n    >\n      <div className=\"Days__Day_Notificators\">\n        <time className={`Days__Day_DayNum`}> </time>\n      </div>\n\n      <div className=\"Days__Day_CardTitle\">\n        <div className=\"Days__Day_CardTitle--DayTitle\" itemType=\"name\">\n          {\" \"}\n        </div>\n        <div\n          className=\"Days__Day_CardTitle--DaySubtitle\"\n          itemType=\"productionCompany\"\n        >\n          {\"  \"}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DayPlaceholder;\n","import React, { Suspense, useState } from \"react\";\nimport Day from \"./day\";\nimport { month, year } from \"../api/Date\";\n//import Multititle from \"./multititle\";\nimport MultititlePlaceholder from \"./Skeleton/multititlePlaceholder\";\nimport DayPlaceholder from \"./Skeleton/dayPlaceholder\";\n\nconst DayContainer = React.memo((props) => {\n  const [multititleState, setMultititleState] = useState([]);\n  const [currentDay, setCurrentDay] = useState(-1);\n\n  // multititleState:\n  // state: boolean\n  // key of array is a day of Days (for like m[15] = 16 of Days\n\n  const changeState = (day) => {\n    let arraylist = multititleState;\n    arraylist.length = 31;\n    arraylist.fill(false);\n    if (day !== currentDay) {\n      arraylist[day] = true;\n      setCurrentDay(day);\n    } else {\n      arraylist[day] = false;\n      setCurrentDay(-1);\n    }\n\n    setMultititleState((multititleState) => (multititleState = [...arraylist]));\n    //console.log(\"ну собсна поменялось все лол\\n\", multititleState);\n  };\n\n  const Multititle = React.lazy(() => import(\"./multititle\"));\n  const { i, titles, filler } = props;\n\n  return (\n    <React.Fragment>\n      <li\n        className={`Days__DayContainer ${\n          !titles[i].day || typeof titles[i].day === typeof \" \"\n            ? \"Days__Day--filledDay\"\n            : \"\"\n        }`}\n        key={\"Container__\" + i}\n      >\n        {titles[i].id ? (\n          <Day\n            id={filler ? \" \" : (i + 1).toString().padStart(2, \"0\")}\n            key={titles[i].id}\n            ani={titles[i]}\n            month={[month, year]}\n            today={new Date().getDate()}\n            changeMV={changeState}\n          />\n        ) : (\n          <DayPlaceholder />\n        )}\n      </li>\n      <Suspense fallback={<MultititlePlaceholder />}>\n        {titles[i].multi ? (\n          <Multititle\n            date={titles[i].airing}\n            titles={titles[i].titleArray}\n            MV={multititleState[titles[i].day - 1]}\n            key={titles[i].id + multititleState[titles[i].day - 1]}\n          />\n        ) : (\n          \"\"\n        )}\n      </Suspense>\n    </React.Fragment>\n  );\n});\n\nexport default DayContainer;\n","import React from \"react\";\n\nconst Ongoing = () => {\n  return [\n    <li key=\"mm_1\">教えて　教えてよ　その仕組みを　僕の中に誰がいるの？</li>,\n    <li key=\"mm_2\">壊れた　壊れたよ　この世界で　君が笑う　何も見えずに</li>,\n\n    <li key=\"mm_3\">壊れた僕なんてさ　息を止めて</li>,\n    <li key=\"mm_4\">ほどけない　もう　ほどけないよ　真実さえ　freeze</li>,\n    <li key=\"mm_5\">壊せる　壊せない　狂える　狂えない</li>,\n    <li key=\"mm_6\">あなたを見つけて　揺れた</li>,\n\n    <li key=\"mm_7\">歪んだ世界にだんだん僕は透き通って見えなくなって</li>,\n    <li key=\"mm_8\">見つけないで　僕のことを　見つめないで</li>,\n    <li key=\"mm_9\">誰かが描いた世界の中で　あなたを傷つけたくはないよ</li>,\n    <li key=\"mm_10\">憶えていて　僕のことを　鮮やかなまま</li>,\n\n    <li key=\"mm_11\">無限に広がる孤独が絡まる　無邪気に笑った記憶が刺さって</li>,\n    <li key=\"mm_12\">\n      動けない　動けない　動けない　動けない　動けない　動けないよ\n    </li>,\n    <li key=\"mm_13\">unraveling the world</li>,\n\n    <li key=\"mm_14\">変わってしまった　変えられなかった</li>,\n    <li key=\"mm_15\">2つが絡まる　2人が滅びる</li>,\n    <li key=\"mm_16\">壊せる　壊せない　狂える　狂えない</li>,\n    <li key=\"mm_17\">あなたを汚せないよ　揺れた</li>,\n\n    <li key=\"mm_18\">歪んだ世界にだんだん僕は透き通って見えなくなって</li>,\n    <li key=\"mm_19\">見つけないで　僕のことを　見つめないで</li>,\n    <li key=\"mm_20\">誰かが仕組んだ孤独な罠に　未来がほどけてしまう前に</li>,\n    <li key=\"mm_21\">思い出して　僕のことを　鮮やかなまま</li>,\n\n    <li key=\"mm_22\">忘れないで　忘れないで　忘れないで　忘れないで</li>,\n    <li key=\"mm_23\">変わってしまったことに paralyze</li>,\n    <li key=\"mm_24\">変えられないことだらけparadise</li>,\n    <li key=\"mm_25\">憶えてて　僕のことを</li>,\n\n    <li key=\"mm_26\">教えて　教えて　僕の中に誰かいるの？</li>,\n  ];\n};\n\nexport default Ongoing;\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\nimport \"./Styling/grid_container.css\";\nimport AnimeAPI from \"../api/getanime\";\nimport { month, year } from \"../api/Date\";\nimport Loading from \"./loading\";\nimport HeadMenu from \"./headMenu\";\nimport DayContainer from \"./dayContainer\";\nimport Ongoing from \"./ongoing\";\nimport DayPlaceholder from \"./Skeleton/dayPlaceholder\";\n\nconst Container = () => {\n  let currentMonth = month.getCurrentMonth();\n  let currentYear = year.getCurrentYear();\n  const { navYear, navMonth } = useParams();\n  if (navYear && navYear >= 1917 && navYear <= 2022 && navMonth) {\n    currentMonth = navMonth;\n    currentYear = navYear;\n  }\n\n  const [titles, setTitles] = useState([]);\n  const [date, setDate] = useState({\n    month: currentMonth,\n    year: currentYear,\n  });\n  const [isLoading, setLoadingState] = useState(false);\n  const [isError, setErrorState] = useState({ error: false, code: \"\" });\n  const [fillerWeek, setFillerWeek] = useState([]);\n\n  useEffect(() => {\n    function setFirstDay() {\n      let tempFillerWeek = [];\n      let firstWeekDay =\n        month.getFirstWeekDayOfMonth(date.month, date.year) - 1;\n      if (firstWeekDay < 0) firstWeekDay = 6;\n      tempFillerWeek.length = firstWeekDay;\n      tempFillerWeek = AnimeAPI.fillNewList(tempFillerWeek, {\n        day: \" \",\n      });\n      setFillerWeek((fillerWeek) => (fillerWeek = [...tempFillerWeek]));\n      console.log(\"sFD calculated\");\n      return tempFillerWeek;\n    }\n\n    async function xd() {\n      setLoadingState(true);\n      document.body.classList.add(\"--overflow\");\n      setErrorState({ error: false, code: \"\" });\n      setFirstDay();\n      try {\n        await AnimeAPI.animeScissors(\n          date.year,\n          month.getSeasonByMonth(date.month),\n          date.month\n        );\n        console.log(\"titlelist had updated!\");\n        await setTitles((titles) => (titles = [...AnimeAPI.titlelist]));\n      } catch (error) {\n        setErrorState({ error: true, code: error });\n      }\n\n      document.title = `malendar for ${date.month} ${date.year}`;\n      setLoadingState(false);\n      document.body.classList.remove(\"--overflow\");\n    }\n\n    xd();\n\n    //eslint-disable-next-line\n  }, [date]);\n\n  const monthClick = () => {\n    let nMonth = month.getRandomMonth(date);\n    setDate({ ...date, month: nMonth });\n    console.log(\"Current season is\", month.getSeasonByMonth(date.month));\n  };\n\n  const yearClick = () => {\n    let nYear = year.getRandomYear(date);\n    setDate({ ...date, year: nYear });\n  };\n\n  const changeDate = (direction, withParams = 0) => {\n    if (date.month === \"January\" && direction < 0) {\n      setDate({ month: \"December\", year: parseInt(date.year) - 1 });\n      if (withParams) return parseInt(date.year) - 1 + \"/December\";\n    } else if (date.month === \"December\" && direction > 0) {\n      setDate({ month: \"January\", year: parseInt(date.year) + 1 });\n      if (withParams) return parseInt(date.year) + 1 + \"/January\";\n    } else {\n      setDate({\n        ...date,\n        month:\n          month.months[\n            month.months.findIndex((e) => e === date.month) + direction\n          ],\n      });\n      if (withParams)\n        return (\n          parseInt(date.year) +\n          \"/\" +\n          month.months[\n            month.months.findIndex((e) => e === date.month) + direction\n          ]\n        );\n    }\n  };\n\n  return (\n    <main className=\"Container\">\n      <HeadMenu\n        monthClick={monthClick}\n        yearClick={yearClick}\n        date={date}\n        changeDate={changeDate}\n        withParams={!!(navYear && navMonth)}\n      />\n      {isLoading || isError.error ? <Loading error={isError} /> : null}\n      <Weekdays />\n      <ol className={`Days`}>\n        <Switch>\n          <Route exact path=\"/malendar/ongoing\">\n            <Ongoing />\n          </Route>\n          <Route exact path=\"/malendar/:navYear/:navMonth\">\n            {fillerWeek.map((el, i) => (\n              <li\n                className={`Days__DayContainer Days__Day--filledDay`}\n                key={\"Container__\" + i}\n              >\n                <DayPlaceholder key={\"DayPlaceholder__\" + i} />\n              </li>\n            ))}\n            {titles.map((el, i) => (\n              <DayContainer i={i} titles={titles} key={\"DayContainer__\" + i} />\n            ))}\n          </Route>\n          <Route exact path=\"/malendar/\">\n            {fillerWeek.map((el, i) => (\n              <li\n                className={`Days__DayContainer Days__Day--filledDay`}\n                key={\"Container__\" + i}\n              >\n                <DayPlaceholder key={\"DayPlaceholder__\" + i} />\n              </li>\n            ))}\n\n            {titles.map((el, i) => (\n              <DayContainer\n                i={i}\n                titles={titles}\n                key={\"DayContainer__\" + i}\n                filler={false}\n              />\n            ))}\n          </Route>\n        </Switch>\n      </ol>\n    </main>\n  );\n};\n\nconst Weekdays = () => (\n  <ul className=\"Days__WeekDays\">\n    <li>M</li>\n    <li>T</li>\n    <li>W</li>\n    <li>T</li>\n    <li>F</li>\n    <li>S</li>\n    <li>S</li>\n  </ul>\n);\n\nexport default Container;\n","import React, { useEffect, useState } from \"react\";\n\nconst About = () => {\n  const [status, setStatus] = useState(0);\n  useEffect(() => {\n    (async function getStatus() {\n      let status = await fetch(process.env.REACT_APP_API + \"anime/1\").then(\n        (res) => {\n          return res.status.toString();\n        }\n      );\n      //status = status.json();\n      setStatus(status);\n    })();\n  }, []);\n\n  return (\n    <main className=\"Container About\">\n      <h1>\n        <span role=\"img\" aria-label=\"narutomaki is a symbol of malendar\">\n          🍥\n        </span>\n        malendar\n        <span role=\"img\" aria-label=\"narutomaki is a symbol of malendar\">\n          🍥\n        </span>\n      </h1>\n\n      <section>\n        <p>\n          Malendar is a web-application that allows you to see calendar for\n          upcoming (and past) anime releases!\n        </p>\n      </section>\n\n      <section>Server status: {status}</section>\n    </main>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport \"./Styling/news.css\";\n\nconst News = () => {\n  return (\n    <div className=\"News\">\n      <h1>What's new?</h1>\n      <section>\n        <h2>07.15.2020 update</h2>\n        <ul>\n          <h3>Features: </h3>\n          <li>Implemented header navigation</li>\n          <li>Added weekdays and w-d marks</li>\n          <h3>Bugfixes: </h3>\n          <li>Fixed bug with macOS bounce scroll background color</li>\n          <li>\n            You can open strict date using links: <br />\n            <small>\n              https://shrmnn.github.io/malendar/1999/January for example\n            </small>\n          </li>\n          <li>Fixed bug with incorrect number of days per month</li>\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default News;\n","import React, { useEffect } from \"react\";\nimport useLocalState from \"../api/useLocalState\";\nimport \"./Styling/footer.css\";\nimport moon from \"../graphics/moon.svg\";\n\nconst Footer = React.memo(() => {\n  const [toggledTheme, toggleTheme] = useLocalState(true, \"toggled\");\n\n  useEffect(() => {\n    if (toggledTheme) {\n      document.documentElement.classList.remove(\"blue\");\n    } else {\n      document.documentElement.classList.add(\"blue\");\n    }\n  }, [toggledTheme]);\n\n  const changeTheme = () => {\n    toggleTheme(!toggledTheme);\n  };\n\n  return (\n    <footer className=\"Footer\">\n      <div\n        aria-label=\"Author of site is Alex Shermann, made in 2020\"\n        className=\"Footer__Right\"\n      >\n        Alex Shermann [2020]\n      </div>\n      <div className=\"Footer__Left\">\n        <p\n          aria-label=\"Site is recommended for 18+\"\n          className=\"marker\"\n          title=\"Site is recommended for 18+\"\n        >\n          18+\n        </p>\n        <img\n          alt=\"change theme\"\n          aria-label=\"change theme\"\n          height=\"32\"\n          width=\"32\"\n          src={moon}\n          onClick={changeTheme}\n          className={toggledTheme ? \"Footer__Left--toggled\" : \"\"}\n        />\n        <a\n          aria-label=\"Link to github\"\n          href=\"https://github.com/shrmnn/malendar\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          title=\"GitHub\"\n        >\n          <img\n            alt=\"github link\"\n            aria-label=\"github link\"\n            height=\"32\"\n            width=\"32\"\n            className=\"Footer__Left--github\"\n            src=\"https://unpkg.com/simple-icons@v3/icons/github.svg\"\n          />\n        </a>\n      </div>\n    </footer>\n  );\n});\n\nexport default Footer;\n","import React from \"react\";\nimport { month, year } from \"../api/Date\";\nimport \"./Styling/FourZeroFour.css\";\n\nconst FourZeroFour = () => {\n  const randomlink =\n    \"https://shrmnn.github.io/malendar/\" +\n    year.getRandomYear(2020) +\n    \"/\" +\n    month.getRandomMonth(\"January\");\n\n  return (\n    <div className=\"FourZeroFour\">\n      <h1>404</h1>\n      <h2>┬┴┬┴┤(･_├┬┴┬┴</h2>\n      <h5>no jokes</h5>\n      <h6>\n        What about <a href={randomlink}>{randomlink}</a>\n      </h6>\n    </div>\n  );\n};\n\nexport default FourZeroFour;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Components/header\";\nimport Container from \"./Components/container\";\nimport About from \"./Components/about\";\nimport News from \"./Components/news\";\nimport Footer from \"./Components/footer\";\n\nimport \"./App.css\";\nimport FourZeroFour from \"./Components/FourZeroFour\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"Content\">\n          <Header />\n          <Switch>\n            <Route exact path=\"/malendar/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/malendar/news\">\n              <News />\n            </Route>\n            <Route exact path=\"/malendar/ongoing\">\n              <Container />\n            </Route>\n            <Route exact path=\"/malendar/:navYear/:navMonth\">\n              <Container />\n            </Route>\n            <Route exact path=\"/malendar/\">\n              <Container />\n            </Route>\n            <Route>\n              <FourZeroFour />\n            </Route>\n          </Switch>\n          <Footer />\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}